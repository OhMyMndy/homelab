# coding: utf-8

"""
    Gitea API

    This documentation describes the Gitea API.

    The version of the OpenAPI document: {{AppVer | JSEscape}}
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from gitea_openapi.models.wiki_page_meta_data import WikiPageMetaData

class TestWikiPageMetaData(unittest.TestCase):
    """WikiPageMetaData unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> WikiPageMetaData:
        """Test WikiPageMetaData
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `WikiPageMetaData`
        """
        model = WikiPageMetaData()
        if include_optional:
            return WikiPageMetaData(
                html_url = '',
                last_commit = gitea_openapi.models.wiki_commit.WikiCommit(
                    author = gitea_openapi.models.commit_user_contains_information_of_a_user_in_the_context_of_a_commit/.CommitUser contains information of a user in the context of a commit.(
                        date = '', 
                        email = '', 
                        name = '', ), 
                    commiter = gitea_openapi.models.commit_user_contains_information_of_a_user_in_the_context_of_a_commit/.CommitUser contains information of a user in the context of a commit.(
                        date = '', 
                        email = '', 
                        name = '', ), 
                    message = '', 
                    sha = '', ),
                sub_url = '',
                title = ''
            )
        else:
            return WikiPageMetaData(
        )
        """

    def testWikiPageMetaData(self):
        """Test WikiPageMetaData"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
