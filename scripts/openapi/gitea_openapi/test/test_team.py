# coding: utf-8

"""
    Gitea API

    This documentation describes the Gitea API.

    The version of the OpenAPI document: {{AppVer | JSEscape}}
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from gitea_openapi.models.team import Team

class TestTeam(unittest.TestCase):
    """Team unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Team:
        """Test Team
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Team`
        """
        model = Team()
        if include_optional:
            return Team(
                can_create_org_repo = True,
                description = '',
                id = 56,
                includes_all_repositories = True,
                name = '',
                organization = gitea_openapi.models.organization.Organization(
                    avatar_url = '', 
                    description = '', 
                    email = '', 
                    full_name = '', 
                    id = 56, 
                    location = '', 
                    name = '', 
                    repo_admin_change_team_access = True, 
                    username = '', 
                    visibility = '', 
                    website = '', ),
                permission = 'none',
                units = [repo.code, repo.issues, repo.ext_issues, repo.wiki, repo.pulls, repo.releases, repo.projects, repo.ext_wiki],
                units_map = {"repo.code":"read","repo.ext_issues":"none","repo.ext_wiki":"none","repo.issues":"write","repo.projects":"none","repo.pulls":"owner","repo.releases":"none","repo.wiki":"admin"}
            )
        else:
            return Team(
        )
        """

    def testTeam(self):
        """Test Team"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
