# coding: utf-8

"""
    GitHub v3 REST API

    GitHub's v3 REST API.

    The version of the OpenAPI document: 1.1.4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from github_openapi.models.webhook_code_scanning_alert_created_alert import WebhookCodeScanningAlertCreatedAlert

class TestWebhookCodeScanningAlertCreatedAlert(unittest.TestCase):
    """WebhookCodeScanningAlertCreatedAlert unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> WebhookCodeScanningAlertCreatedAlert:
        """Test WebhookCodeScanningAlertCreatedAlert
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `WebhookCodeScanningAlertCreatedAlert`
        """
        model = WebhookCodeScanningAlertCreatedAlert()
        if include_optional:
            return WebhookCodeScanningAlertCreatedAlert(
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                dismissed_at = None,
                dismissed_by = None,
                dismissed_comment = '',
                dismissed_reason = None,
                fixed_at = None,
                html_url = '',
                instances_url = '',
                most_recent_instance = github_openapi.models.alert_instance.Alert Instance(
                    analysis_key = '', 
                    category = '', 
                    classifications = [
                        ''
                        ], 
                    commit_sha = '', 
                    environment = '', 
                    location = github_openapi.models.alert_instance_location.Alert_Instance_location(
                        end_column = 56, 
                        end_line = 56, 
                        path = '', 
                        start_column = 56, 
                        start_line = 56, ), 
                    message = github_openapi.models.code_scanning_alert_instance_message.code_scanning_alert_instance_message(
                        text = '', ), 
                    ref = '', 
                    state = 'open', ),
                number = 56,
                rule = github_openapi.models.webhook_code_scanning_alert_closed_by_user_alert_rule.webhook_code_scanning_alert_closed_by_user_alert_rule(
                    description = '', 
                    full_description = '', 
                    help = '', 
                    help_uri = '', 
                    id = '', 
                    name = '', 
                    severity = 'none', 
                    tags = [
                        ''
                        ], ),
                state = 'open',
                tool = github_openapi.models.webhook_code_scanning_alert_created_alert_tool.webhook_code_scanning_alert_created_alert_tool(
                    guid = '', 
                    name = '', 
                    version = '', ),
                updated_at = '',
                url = ''
            )
        else:
            return WebhookCodeScanningAlertCreatedAlert(
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                dismissed_at = None,
                dismissed_by = None,
                dismissed_reason = None,
                html_url = '',
                number = 56,
                rule = github_openapi.models.webhook_code_scanning_alert_closed_by_user_alert_rule.webhook_code_scanning_alert_closed_by_user_alert_rule(
                    description = '', 
                    full_description = '', 
                    help = '', 
                    help_uri = '', 
                    id = '', 
                    name = '', 
                    severity = 'none', 
                    tags = [
                        ''
                        ], ),
                state = 'open',
                tool = github_openapi.models.webhook_code_scanning_alert_created_alert_tool.webhook_code_scanning_alert_created_alert_tool(
                    guid = '', 
                    name = '', 
                    version = '', ),
                url = '',
        )
        """

    def testWebhookCodeScanningAlertCreatedAlert(self):
        """Test WebhookCodeScanningAlertCreatedAlert"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
