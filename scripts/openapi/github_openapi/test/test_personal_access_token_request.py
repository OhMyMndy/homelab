# coding: utf-8

"""
    GitHub v3 REST API

    GitHub's v3 REST API.

    The version of the OpenAPI document: 1.1.4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from github_openapi.models.personal_access_token_request import PersonalAccessTokenRequest

class TestPersonalAccessTokenRequest(unittest.TestCase):
    """PersonalAccessTokenRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PersonalAccessTokenRequest:
        """Test PersonalAccessTokenRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PersonalAccessTokenRequest`
        """
        model = PersonalAccessTokenRequest()
        if include_optional:
            return PersonalAccessTokenRequest(
                id = 56,
                owner = github_openapi.models.simple_user.Simple User(
                    name = '', 
                    email = '', 
                    login = 'octocat', 
                    id = 1, 
                    node_id = 'MDQ6VXNlcjE=', 
                    avatar_url = 'https://github.com/images/error/octocat_happy.gif', 
                    gravatar_id = '41d064eb2195891e12d0413f63227ea7', 
                    url = 'https://api.github.com/users/octocat', 
                    html_url = 'https://github.com/octocat', 
                    followers_url = 'https://api.github.com/users/octocat/followers', 
                    following_url = 'https://api.github.com/users/octocat/following{/other_user}', 
                    gists_url = 'https://api.github.com/users/octocat/gists{/gist_id}', 
                    starred_url = 'https://api.github.com/users/octocat/starred{/owner}{/repo}', 
                    subscriptions_url = 'https://api.github.com/users/octocat/subscriptions', 
                    organizations_url = 'https://api.github.com/users/octocat/orgs', 
                    repos_url = 'https://api.github.com/users/octocat/repos', 
                    events_url = 'https://api.github.com/users/octocat/events{/privacy}', 
                    received_events_url = 'https://api.github.com/users/octocat/received_events', 
                    type = 'User', 
                    site_admin = True, 
                    starred_at = '"2020-07-09T00:17:55Z"', 
                    user_view_type = 'public', ),
                permissions_added = github_openapi.models.personal_access_token_request_permissions_added.personal_access_token_request_permissions_added(
                    organization = {
                        'key' : ''
                        }, 
                    repository = {
                        'key' : ''
                        }, 
                    other = {
                        'key' : ''
                        }, ),
                permissions_upgraded = github_openapi.models.personal_access_token_request_permissions_upgraded.personal_access_token_request_permissions_upgraded(
                    organization = {
                        'key' : ''
                        }, 
                    repository = {
                        'key' : ''
                        }, 
                    other = {
                        'key' : ''
                        }, ),
                permissions_result = github_openapi.models.personal_access_token_request_permissions_result.personal_access_token_request_permissions_result(
                    organization = {
                        'key' : ''
                        }, 
                    repository = {
                        'key' : ''
                        }, 
                    other = {
                        'key' : ''
                        }, ),
                repository_selection = 'none',
                repository_count = 56,
                repositories = [
                    github_openapi.models.webhooks_repositories_inner.webhooks_repositories_inner(
                        full_name = '', 
                        id = 56, 
                        name = '', 
                        node_id = '', 
                        private = True, )
                    ],
                created_at = '',
                token_id = 56,
                token_name = '',
                token_expired = True,
                token_expires_at = '',
                token_last_used_at = ''
            )
        else:
            return PersonalAccessTokenRequest(
                id = 56,
                owner = github_openapi.models.simple_user.Simple User(
                    name = '', 
                    email = '', 
                    login = 'octocat', 
                    id = 1, 
                    node_id = 'MDQ6VXNlcjE=', 
                    avatar_url = 'https://github.com/images/error/octocat_happy.gif', 
                    gravatar_id = '41d064eb2195891e12d0413f63227ea7', 
                    url = 'https://api.github.com/users/octocat', 
                    html_url = 'https://github.com/octocat', 
                    followers_url = 'https://api.github.com/users/octocat/followers', 
                    following_url = 'https://api.github.com/users/octocat/following{/other_user}', 
                    gists_url = 'https://api.github.com/users/octocat/gists{/gist_id}', 
                    starred_url = 'https://api.github.com/users/octocat/starred{/owner}{/repo}', 
                    subscriptions_url = 'https://api.github.com/users/octocat/subscriptions', 
                    organizations_url = 'https://api.github.com/users/octocat/orgs', 
                    repos_url = 'https://api.github.com/users/octocat/repos', 
                    events_url = 'https://api.github.com/users/octocat/events{/privacy}', 
                    received_events_url = 'https://api.github.com/users/octocat/received_events', 
                    type = 'User', 
                    site_admin = True, 
                    starred_at = '"2020-07-09T00:17:55Z"', 
                    user_view_type = 'public', ),
                permissions_added = github_openapi.models.personal_access_token_request_permissions_added.personal_access_token_request_permissions_added(
                    organization = {
                        'key' : ''
                        }, 
                    repository = {
                        'key' : ''
                        }, 
                    other = {
                        'key' : ''
                        }, ),
                permissions_upgraded = github_openapi.models.personal_access_token_request_permissions_upgraded.personal_access_token_request_permissions_upgraded(
                    organization = {
                        'key' : ''
                        }, 
                    repository = {
                        'key' : ''
                        }, 
                    other = {
                        'key' : ''
                        }, ),
                permissions_result = github_openapi.models.personal_access_token_request_permissions_result.personal_access_token_request_permissions_result(
                    organization = {
                        'key' : ''
                        }, 
                    repository = {
                        'key' : ''
                        }, 
                    other = {
                        'key' : ''
                        }, ),
                repository_selection = 'none',
                repository_count = 56,
                repositories = [
                    github_openapi.models.webhooks_repositories_inner.webhooks_repositories_inner(
                        full_name = '', 
                        id = 56, 
                        name = '', 
                        node_id = '', 
                        private = True, )
                    ],
                created_at = '',
                token_id = 56,
                token_name = '',
                token_expired = True,
                token_expires_at = '',
                token_last_used_at = '',
        )
        """

    def testPersonalAccessTokenRequest(self):
        """Test PersonalAccessTokenRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
