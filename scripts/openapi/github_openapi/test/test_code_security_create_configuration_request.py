# coding: utf-8

"""
    GitHub v3 REST API

    GitHub's v3 REST API.

    The version of the OpenAPI document: 1.1.4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from github_openapi.models.code_security_create_configuration_request import CodeSecurityCreateConfigurationRequest

class TestCodeSecurityCreateConfigurationRequest(unittest.TestCase):
    """CodeSecurityCreateConfigurationRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CodeSecurityCreateConfigurationRequest:
        """Test CodeSecurityCreateConfigurationRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CodeSecurityCreateConfigurationRequest`
        """
        model = CodeSecurityCreateConfigurationRequest()
        if include_optional:
            return CodeSecurityCreateConfigurationRequest(
                name = '',
                description = '',
                advanced_security = 'disabled',
                dependency_graph = 'enabled',
                dependency_graph_autosubmit_action = 'disabled',
                dependency_graph_autosubmit_action_options = github_openapi.models.code_security_create_configuration_for_enterprise_request_dependency_graph_autosubmit_action_options.code_security_create_configuration_for_enterprise_request_dependency_graph_autosubmit_action_options(
                    labeled_runners = True, ),
                dependabot_alerts = 'disabled',
                dependabot_security_updates = 'disabled',
                code_scanning_default_setup = 'disabled',
                code_scanning_default_setup_options = github_openapi.models.code_scanning_default_setup_options.code-scanning-default-setup-options(
                    runner_type = 'standard', 
                    runner_label = '', ),
                secret_scanning = 'disabled',
                secret_scanning_push_protection = 'disabled',
                secret_scanning_delegated_bypass = 'disabled',
                secret_scanning_delegated_bypass_options = github_openapi.models.code_security_create_configuration_request_secret_scanning_delegated_bypass_options.code_security_create_configuration_request_secret_scanning_delegated_bypass_options(
                    reviewers = [
                        github_openapi.models.code_security_create_configuration_request_secret_scanning_delegated_bypass_options_reviewers_inner.code_security_create_configuration_request_secret_scanning_delegated_bypass_options_reviewers_inner(
                            reviewer_id = 56, 
                            reviewer_type = 'TEAM', )
                        ], ),
                secret_scanning_validity_checks = 'disabled',
                secret_scanning_non_provider_patterns = 'disabled',
                private_vulnerability_reporting = 'disabled',
                enforcement = 'enforced'
            )
        else:
            return CodeSecurityCreateConfigurationRequest(
                name = '',
                description = '',
        )
        """

    def testCodeSecurityCreateConfigurationRequest(self):
        """Test CodeSecurityCreateConfigurationRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
