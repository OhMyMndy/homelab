# coding: utf-8

"""
    GitHub v3 REST API

    GitHub's v3 REST API.

    The version of the OpenAPI document: 1.1.4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from github_openapi.models.orgs_update_request import OrgsUpdateRequest

class TestOrgsUpdateRequest(unittest.TestCase):
    """OrgsUpdateRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> OrgsUpdateRequest:
        """Test OrgsUpdateRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `OrgsUpdateRequest`
        """
        model = OrgsUpdateRequest()
        if include_optional:
            return OrgsUpdateRequest(
                billing_email = '',
                company = '',
                email = '',
                twitter_username = '',
                location = '',
                name = '',
                description = '',
                has_organization_projects = True,
                has_repository_projects = True,
                default_repository_permission = 'read',
                members_can_create_repositories = True,
                members_can_create_internal_repositories = True,
                members_can_create_private_repositories = True,
                members_can_create_public_repositories = True,
                members_allowed_repository_creation_type = 'all',
                members_can_create_pages = True,
                members_can_create_public_pages = True,
                members_can_create_private_pages = True,
                members_can_fork_private_repositories = True,
                web_commit_signoff_required = True,
                blog = '"http://github.blog"',
                advanced_security_enabled_for_new_repositories = True,
                dependabot_alerts_enabled_for_new_repositories = True,
                dependabot_security_updates_enabled_for_new_repositories = True,
                dependency_graph_enabled_for_new_repositories = True,
                secret_scanning_enabled_for_new_repositories = True,
                secret_scanning_push_protection_enabled_for_new_repositories = True,
                secret_scanning_push_protection_custom_link_enabled = True,
                secret_scanning_push_protection_custom_link = '',
                deploy_keys_enabled_for_repositories = True
            )
        else:
            return OrgsUpdateRequest(
        )
        """

    def testOrgsUpdateRequest(self):
        """Test OrgsUpdateRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
