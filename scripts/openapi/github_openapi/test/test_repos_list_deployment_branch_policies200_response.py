# coding: utf-8

"""
    GitHub v3 REST API

    GitHub's v3 REST API.

    The version of the OpenAPI document: 1.1.4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from github_openapi.models.repos_list_deployment_branch_policies200_response import ReposListDeploymentBranchPolicies200Response

class TestReposListDeploymentBranchPolicies200Response(unittest.TestCase):
    """ReposListDeploymentBranchPolicies200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ReposListDeploymentBranchPolicies200Response:
        """Test ReposListDeploymentBranchPolicies200Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ReposListDeploymentBranchPolicies200Response`
        """
        model = ReposListDeploymentBranchPolicies200Response()
        if include_optional:
            return ReposListDeploymentBranchPolicies200Response(
                total_count = 2,
                branch_policies = [
                    github_openapi.models.deployment_branch_policy.Deployment branch policy(
                        id = 361471, 
                        node_id = 'MDE2OkdhdGVCcmFuY2hQb2xpY3kzNjE0NzE=', 
                        name = 'release/*', 
                        type = 'branch', )
                    ]
            )
        else:
            return ReposListDeploymentBranchPolicies200Response(
                total_count = 2,
                branch_policies = [
                    github_openapi.models.deployment_branch_policy.Deployment branch policy(
                        id = 361471, 
                        node_id = 'MDE2OkdhdGVCcmFuY2hQb2xpY3kzNjE0NzE=', 
                        name = 'release/*', 
                        type = 'branch', )
                    ],
        )
        """

    def testReposListDeploymentBranchPolicies200Response(self):
        """Test ReposListDeploymentBranchPolicies200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
