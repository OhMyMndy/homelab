# coding: utf-8

"""
    GitHub v3 REST API

    GitHub's v3 REST API.

    The version of the OpenAPI document: 1.1.4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from github_openapi.models.webhook_branch_protection_rule_edited_changes import WebhookBranchProtectionRuleEditedChanges

class TestWebhookBranchProtectionRuleEditedChanges(unittest.TestCase):
    """WebhookBranchProtectionRuleEditedChanges unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> WebhookBranchProtectionRuleEditedChanges:
        """Test WebhookBranchProtectionRuleEditedChanges
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `WebhookBranchProtectionRuleEditedChanges`
        """
        model = WebhookBranchProtectionRuleEditedChanges()
        if include_optional:
            return WebhookBranchProtectionRuleEditedChanges(
                admin_enforced = github_openapi.models.webhook_branch_protection_rule_edited_changes_admin_enforced.webhook_branch_protection_rule_edited_changes_admin_enforced(
                    from = True, ),
                authorized_actor_names = github_openapi.models.webhook_branch_protection_rule_edited_changes_authorized_actor_names.webhook_branch_protection_rule_edited_changes_authorized_actor_names(
                    from = [
                        ''
                        ], ),
                authorized_actors_only = github_openapi.models.webhook_branch_protection_rule_edited_changes_admin_enforced.webhook_branch_protection_rule_edited_changes_admin_enforced(
                    from = True, ),
                authorized_dismissal_actors_only = github_openapi.models.webhook_branch_protection_rule_edited_changes_admin_enforced.webhook_branch_protection_rule_edited_changes_admin_enforced(
                    from = True, ),
                linear_history_requirement_enforcement_level = github_openapi.models.webhook_branch_protection_rule_edited_changes_linear_history_requirement_enforcement_level.webhook_branch_protection_rule_edited_changes_linear_history_requirement_enforcement_level(
                    from = 'off', ),
                lock_branch_enforcement_level = github_openapi.models.webhook_branch_protection_rule_edited_changes_linear_history_requirement_enforcement_level.webhook_branch_protection_rule_edited_changes_linear_history_requirement_enforcement_level(
                    from = 'off', ),
                lock_allows_fork_sync = github_openapi.models.webhook_branch_protection_rule_edited_changes_admin_enforced.webhook_branch_protection_rule_edited_changes_admin_enforced(
                    from = True, ),
                pull_request_reviews_enforcement_level = github_openapi.models.webhook_branch_protection_rule_edited_changes_linear_history_requirement_enforcement_level.webhook_branch_protection_rule_edited_changes_linear_history_requirement_enforcement_level(
                    from = 'off', ),
                require_last_push_approval = github_openapi.models.webhook_branch_protection_rule_edited_changes_admin_enforced.webhook_branch_protection_rule_edited_changes_admin_enforced(
                    from = True, ),
                required_status_checks = github_openapi.models.webhook_branch_protection_rule_edited_changes_authorized_actor_names.webhook_branch_protection_rule_edited_changes_authorized_actor_names(
                    from = [
                        ''
                        ], ),
                required_status_checks_enforcement_level = github_openapi.models.webhook_branch_protection_rule_edited_changes_linear_history_requirement_enforcement_level.webhook_branch_protection_rule_edited_changes_linear_history_requirement_enforcement_level(
                    from = 'off', )
            )
        else:
            return WebhookBranchProtectionRuleEditedChanges(
        )
        """

    def testWebhookBranchProtectionRuleEditedChanges(self):
        """Test WebhookBranchProtectionRuleEditedChanges"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
