# coding: utf-8

"""
    GitHub v3 REST API

    GitHub's v3 REST API.

    The version of the OpenAPI document: 1.1.4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from github_openapi.api.apps_api import AppsApi


class TestAppsApi(unittest.TestCase):
    """AppsApi unit test stubs"""

    def setUp(self) -> None:
        self.api = AppsApi()

    def tearDown(self) -> None:
        pass

    def test_apps_add_repo_to_installation_for_authenticated_user(self) -> None:
        """Test case for apps_add_repo_to_installation_for_authenticated_user

        Add a repository to an app installation
        """
        pass

    def test_apps_check_token(self) -> None:
        """Test case for apps_check_token

        Check a token
        """
        pass

    def test_apps_create_from_manifest(self) -> None:
        """Test case for apps_create_from_manifest

        Create a GitHub App from a manifest
        """
        pass

    def test_apps_create_installation_access_token(self) -> None:
        """Test case for apps_create_installation_access_token

        Create an installation access token for an app
        """
        pass

    def test_apps_delete_authorization(self) -> None:
        """Test case for apps_delete_authorization

        Delete an app authorization
        """
        pass

    def test_apps_delete_installation(self) -> None:
        """Test case for apps_delete_installation

        Delete an installation for the authenticated app
        """
        pass

    def test_apps_delete_token(self) -> None:
        """Test case for apps_delete_token

        Delete an app token
        """
        pass

    def test_apps_get_authenticated(self) -> None:
        """Test case for apps_get_authenticated

        Get the authenticated app
        """
        pass

    def test_apps_get_by_slug(self) -> None:
        """Test case for apps_get_by_slug

        Get an app
        """
        pass

    def test_apps_get_installation(self) -> None:
        """Test case for apps_get_installation

        Get an installation for the authenticated app
        """
        pass

    def test_apps_get_org_installation(self) -> None:
        """Test case for apps_get_org_installation

        Get an organization installation for the authenticated app
        """
        pass

    def test_apps_get_repo_installation(self) -> None:
        """Test case for apps_get_repo_installation

        Get a repository installation for the authenticated app
        """
        pass

    def test_apps_get_subscription_plan_for_account(self) -> None:
        """Test case for apps_get_subscription_plan_for_account

        Get a subscription plan for an account
        """
        pass

    def test_apps_get_subscription_plan_for_account_stubbed(self) -> None:
        """Test case for apps_get_subscription_plan_for_account_stubbed

        Get a subscription plan for an account (stubbed)
        """
        pass

    def test_apps_get_user_installation(self) -> None:
        """Test case for apps_get_user_installation

        Get a user installation for the authenticated app
        """
        pass

    def test_apps_get_webhook_config_for_app(self) -> None:
        """Test case for apps_get_webhook_config_for_app

        Get a webhook configuration for an app
        """
        pass

    def test_apps_get_webhook_delivery(self) -> None:
        """Test case for apps_get_webhook_delivery

        Get a delivery for an app webhook
        """
        pass

    def test_apps_list_accounts_for_plan(self) -> None:
        """Test case for apps_list_accounts_for_plan

        List accounts for a plan
        """
        pass

    def test_apps_list_accounts_for_plan_stubbed(self) -> None:
        """Test case for apps_list_accounts_for_plan_stubbed

        List accounts for a plan (stubbed)
        """
        pass

    def test_apps_list_installation_repos_for_authenticated_user(self) -> None:
        """Test case for apps_list_installation_repos_for_authenticated_user

        List repositories accessible to the user access token
        """
        pass

    def test_apps_list_installation_requests_for_authenticated_app(self) -> None:
        """Test case for apps_list_installation_requests_for_authenticated_app

        List installation requests for the authenticated app
        """
        pass

    def test_apps_list_installations(self) -> None:
        """Test case for apps_list_installations

        List installations for the authenticated app
        """
        pass

    def test_apps_list_installations_for_authenticated_user(self) -> None:
        """Test case for apps_list_installations_for_authenticated_user

        List app installations accessible to the user access token
        """
        pass

    def test_apps_list_plans(self) -> None:
        """Test case for apps_list_plans

        List plans
        """
        pass

    def test_apps_list_plans_stubbed(self) -> None:
        """Test case for apps_list_plans_stubbed

        List plans (stubbed)
        """
        pass

    def test_apps_list_repos_accessible_to_installation(self) -> None:
        """Test case for apps_list_repos_accessible_to_installation

        List repositories accessible to the app installation
        """
        pass

    def test_apps_list_subscriptions_for_authenticated_user(self) -> None:
        """Test case for apps_list_subscriptions_for_authenticated_user

        List subscriptions for the authenticated user
        """
        pass

    def test_apps_list_subscriptions_for_authenticated_user_stubbed(self) -> None:
        """Test case for apps_list_subscriptions_for_authenticated_user_stubbed

        List subscriptions for the authenticated user (stubbed)
        """
        pass

    def test_apps_list_webhook_deliveries(self) -> None:
        """Test case for apps_list_webhook_deliveries

        List deliveries for an app webhook
        """
        pass

    def test_apps_redeliver_webhook_delivery(self) -> None:
        """Test case for apps_redeliver_webhook_delivery

        Redeliver a delivery for an app webhook
        """
        pass

    def test_apps_remove_repo_from_installation_for_authenticated_user(self) -> None:
        """Test case for apps_remove_repo_from_installation_for_authenticated_user

        Remove a repository from an app installation
        """
        pass

    def test_apps_reset_token(self) -> None:
        """Test case for apps_reset_token

        Reset a token
        """
        pass

    def test_apps_revoke_installation_access_token(self) -> None:
        """Test case for apps_revoke_installation_access_token

        Revoke an installation access token
        """
        pass

    def test_apps_scope_token(self) -> None:
        """Test case for apps_scope_token

        Create a scoped access token
        """
        pass

    def test_apps_suspend_installation(self) -> None:
        """Test case for apps_suspend_installation

        Suspend an app installation
        """
        pass

    def test_apps_unsuspend_installation(self) -> None:
        """Test case for apps_unsuspend_installation

        Unsuspend an app installation
        """
        pass

    def test_apps_update_webhook_config_for_app(self) -> None:
        """Test case for apps_update_webhook_config_for_app

        Update a webhook configuration for an app
        """
        pass


if __name__ == '__main__':
    unittest.main()
