# coding: utf-8

"""
    GitHub v3 REST API

    GitHub's v3 REST API.

    The version of the OpenAPI document: 1.1.4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from github_openapi.models.community_profile import CommunityProfile

class TestCommunityProfile(unittest.TestCase):
    """CommunityProfile unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CommunityProfile:
        """Test CommunityProfile
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CommunityProfile`
        """
        model = CommunityProfile()
        if include_optional:
            return CommunityProfile(
                health_percentage = 100,
                description = 'My first repository on GitHub!',
                documentation = 'example.com',
                files = github_openapi.models.community_profile_files.community_profile_files(
                    code_of_conduct = github_openapi.models.code_of_conduct_simple.Code Of Conduct Simple(
                        url = 'https://api.github.com/repos/github/docs/community/code_of_conduct', 
                        key = 'citizen_code_of_conduct', 
                        name = 'Citizen Code of Conduct', 
                        html_url = 'https://github.com/github/docs/blob/main/CODE_OF_CONDUCT.md', ), 
                    code_of_conduct_file = github_openapi.models.community_health_file.Community Health File(
                        url = '', 
                        html_url = '', ), 
                    license = github_openapi.models.license_simple.License Simple(
                        key = 'mit', 
                        name = 'MIT License', 
                        url = 'https://api.github.com/licenses/mit', 
                        spdx_id = 'MIT', 
                        node_id = 'MDc6TGljZW5zZW1pdA==', 
                        html_url = '', ), 
                    contributing = github_openapi.models.community_health_file.Community Health File(
                        url = '', 
                        html_url = '', ), 
                    readme = , 
                    issue_template = , 
                    pull_request_template = , ),
                updated_at = '2017-02-28T19:09:29Z',
                content_reports_enabled = True
            )
        else:
            return CommunityProfile(
                health_percentage = 100,
                description = 'My first repository on GitHub!',
                documentation = 'example.com',
                files = github_openapi.models.community_profile_files.community_profile_files(
                    code_of_conduct = github_openapi.models.code_of_conduct_simple.Code Of Conduct Simple(
                        url = 'https://api.github.com/repos/github/docs/community/code_of_conduct', 
                        key = 'citizen_code_of_conduct', 
                        name = 'Citizen Code of Conduct', 
                        html_url = 'https://github.com/github/docs/blob/main/CODE_OF_CONDUCT.md', ), 
                    code_of_conduct_file = github_openapi.models.community_health_file.Community Health File(
                        url = '', 
                        html_url = '', ), 
                    license = github_openapi.models.license_simple.License Simple(
                        key = 'mit', 
                        name = 'MIT License', 
                        url = 'https://api.github.com/licenses/mit', 
                        spdx_id = 'MIT', 
                        node_id = 'MDc6TGljZW5zZW1pdA==', 
                        html_url = '', ), 
                    contributing = github_openapi.models.community_health_file.Community Health File(
                        url = '', 
                        html_url = '', ), 
                    readme = , 
                    issue_template = , 
                    pull_request_template = , ),
                updated_at = '2017-02-28T19:09:29Z',
        )
        """

    def testCommunityProfile(self):
        """Test CommunityProfile"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
