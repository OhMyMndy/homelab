# coding: utf-8

"""
    GitHub v3 REST API

    GitHub's v3 REST API.

    The version of the OpenAPI document: 1.1.4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from github_openapi.models.api_overview import ApiOverview

class TestApiOverview(unittest.TestCase):
    """ApiOverview unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ApiOverview:
        """Test ApiOverview
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ApiOverview`
        """
        model = ApiOverview()
        if include_optional:
            return ApiOverview(
                verifiable_password_authentication = True,
                ssh_key_fingerprints = github_openapi.models.api_overview_ssh_key_fingerprints.api_overview_ssh_key_fingerprints(
                    sha256_rsa = '', 
                    sha256_dsa = '', 
                    sha256_ecdsa = '', 
                    sha256_ed25519 = '', ),
                ssh_keys = ["ssh-ed25519 ABCDEFGHIJKLMNOPQRSTUVWXYZ"],
                hooks = ["192.0.2.1"],
                github_enterprise_importer = ["192.0.2.1"],
                web = ["192.0.2.1"],
                api = ["192.0.2.1"],
                git = ["192.0.2.1"],
                packages = ["192.0.2.1"],
                pages = ["192.0.2.1"],
                importer = ["192.0.2.1"],
                actions = ["192.0.2.1"],
                actions_macos = ["192.0.2.1"],
                codespaces = ["192.0.2.1"],
                dependabot = ["192.0.2.1"],
                copilot = ["192.0.2.1"],
                domains = github_openapi.models.api_overview_domains.api_overview_domains(
                    website = [
                        '["example.com"]'
                        ], 
                    codespaces = [
                        '["example.com"]'
                        ], 
                    copilot = [
                        '["example.com"]'
                        ], 
                    packages = [
                        '["example.com"]'
                        ], 
                    actions = [
                        '["example.com"]'
                        ], 
                    actions_inbound = github_openapi.models.api_overview_domains_actions_inbound.api_overview_domains_actions_inbound(
                        full_domains = [
                            '["example.com"]'
                            ], 
                        wildcard_domains = [
                            '["example.com"]'
                            ], ), 
                    artifact_attestations = github_openapi.models.api_overview_domains_artifact_attestations.api_overview_domains_artifact_attestations(
                        trust_domain = '["example"]', 
                        services = [
                            '["example.com"]'
                            ], ), )
            )
        else:
            return ApiOverview(
                verifiable_password_authentication = True,
        )
        """

    def testApiOverview(self):
        """Test ApiOverview"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
