# coding: utf-8

"""
    GitHub v3 REST API

    GitHub's v3 REST API.

    The version of the OpenAPI document: 1.1.4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from github_openapi.models.feed_links import FeedLinks

class TestFeedLinks(unittest.TestCase):
    """FeedLinks unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> FeedLinks:
        """Test FeedLinks
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `FeedLinks`
        """
        model = FeedLinks()
        if include_optional:
            return FeedLinks(
                timeline = github_openapi.models.link_with_type.Link With Type(
                    href = '', 
                    type = '', ),
                user = github_openapi.models.link_with_type.Link With Type(
                    href = '', 
                    type = '', ),
                security_advisories = github_openapi.models.link_with_type.Link With Type(
                    href = '', 
                    type = '', ),
                current_user = github_openapi.models.link_with_type.Link With Type(
                    href = '', 
                    type = '', ),
                current_user_public = github_openapi.models.link_with_type.Link With Type(
                    href = '', 
                    type = '', ),
                current_user_actor = github_openapi.models.link_with_type.Link With Type(
                    href = '', 
                    type = '', ),
                current_user_organization = github_openapi.models.link_with_type.Link With Type(
                    href = '', 
                    type = '', ),
                current_user_organizations = [
                    github_openapi.models.link_with_type.Link With Type(
                        href = '', 
                        type = '', )
                    ],
                repository_discussions = github_openapi.models.link_with_type.Link With Type(
                    href = '', 
                    type = '', ),
                repository_discussions_category = github_openapi.models.link_with_type.Link With Type(
                    href = '', 
                    type = '', )
            )
        else:
            return FeedLinks(
                timeline = github_openapi.models.link_with_type.Link With Type(
                    href = '', 
                    type = '', ),
                user = github_openapi.models.link_with_type.Link With Type(
                    href = '', 
                    type = '', ),
        )
        """

    def testFeedLinks(self):
        """Test FeedLinks"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
