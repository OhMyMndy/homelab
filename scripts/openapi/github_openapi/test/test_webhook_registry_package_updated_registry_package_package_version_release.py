# coding: utf-8

"""
    GitHub v3 REST API

    GitHub's v3 REST API.

    The version of the OpenAPI document: 1.1.4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from github_openapi.models.webhook_registry_package_updated_registry_package_package_version_release import WebhookRegistryPackageUpdatedRegistryPackagePackageVersionRelease

class TestWebhookRegistryPackageUpdatedRegistryPackagePackageVersionRelease(unittest.TestCase):
    """WebhookRegistryPackageUpdatedRegistryPackagePackageVersionRelease unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> WebhookRegistryPackageUpdatedRegistryPackagePackageVersionRelease:
        """Test WebhookRegistryPackageUpdatedRegistryPackagePackageVersionRelease
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `WebhookRegistryPackageUpdatedRegistryPackagePackageVersionRelease`
        """
        model = WebhookRegistryPackageUpdatedRegistryPackagePackageVersionRelease()
        if include_optional:
            return WebhookRegistryPackageUpdatedRegistryPackagePackageVersionRelease(
                author = github_openapi.models.webhook_registry_package_published_registry_package_owner.webhook_registry_package_published_registry_package_owner(
                    avatar_url = '', 
                    events_url = '', 
                    followers_url = '', 
                    following_url = '', 
                    gists_url = '', 
                    gravatar_id = '', 
                    html_url = '', 
                    id = 56, 
                    login = '', 
                    node_id = '', 
                    organizations_url = '', 
                    received_events_url = '', 
                    repos_url = '', 
                    site_admin = True, 
                    starred_url = '', 
                    subscriptions_url = '', 
                    type = '', 
                    url = '', 
                    user_view_type = '', ),
                created_at = '',
                draft = True,
                html_url = '',
                id = 56,
                name = '',
                prerelease = True,
                published_at = '',
                tag_name = '',
                target_commitish = '',
                url = ''
            )
        else:
            return WebhookRegistryPackageUpdatedRegistryPackagePackageVersionRelease(
                author = github_openapi.models.webhook_registry_package_published_registry_package_owner.webhook_registry_package_published_registry_package_owner(
                    avatar_url = '', 
                    events_url = '', 
                    followers_url = '', 
                    following_url = '', 
                    gists_url = '', 
                    gravatar_id = '', 
                    html_url = '', 
                    id = 56, 
                    login = '', 
                    node_id = '', 
                    organizations_url = '', 
                    received_events_url = '', 
                    repos_url = '', 
                    site_admin = True, 
                    starred_url = '', 
                    subscriptions_url = '', 
                    type = '', 
                    url = '', 
                    user_view_type = '', ),
                created_at = '',
                draft = True,
                html_url = '',
                id = 56,
                name = '',
                prerelease = True,
                published_at = '',
                tag_name = '',
                target_commitish = '',
                url = '',
        )
        """

    def testWebhookRegistryPackageUpdatedRegistryPackagePackageVersionRelease(self):
        """Test WebhookRegistryPackageUpdatedRegistryPackagePackageVersionRelease"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
