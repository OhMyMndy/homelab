# coding: utf-8

"""
    GitHub v3 REST API

    GitHub's v3 REST API.

    The version of the OpenAPI document: 1.1.4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from github_openapi.models.gpg_key_subkeys_inner import GpgKeySubkeysInner

class TestGpgKeySubkeysInner(unittest.TestCase):
    """GpgKeySubkeysInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GpgKeySubkeysInner:
        """Test GpgKeySubkeysInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GpgKeySubkeysInner`
        """
        model = GpgKeySubkeysInner()
        if include_optional:
            return GpgKeySubkeysInner(
                id = 56,
                primary_key_id = 56,
                key_id = '',
                public_key = '',
                emails = [
                    github_openapi.models.gpg_key_emails_inner.gpg_key_emails_inner(
                        email = '', 
                        verified = True, )
                    ],
                subkeys = [
                    null
                    ],
                can_sign = True,
                can_encrypt_comms = True,
                can_encrypt_storage = True,
                can_certify = True,
                created_at = '',
                expires_at = '',
                raw_key = '',
                revoked = True
            )
        else:
            return GpgKeySubkeysInner(
        )
        """

    def testGpgKeySubkeysInner(self):
        """Test GpgKeySubkeysInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
