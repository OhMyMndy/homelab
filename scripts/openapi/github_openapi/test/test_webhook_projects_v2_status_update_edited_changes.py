# coding: utf-8

"""
    GitHub v3 REST API

    GitHub's v3 REST API.

    The version of the OpenAPI document: 1.1.4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from github_openapi.models.webhook_projects_v2_status_update_edited_changes import WebhookProjectsV2StatusUpdateEditedChanges

class TestWebhookProjectsV2StatusUpdateEditedChanges(unittest.TestCase):
    """WebhookProjectsV2StatusUpdateEditedChanges unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> WebhookProjectsV2StatusUpdateEditedChanges:
        """Test WebhookProjectsV2StatusUpdateEditedChanges
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `WebhookProjectsV2StatusUpdateEditedChanges`
        """
        model = WebhookProjectsV2StatusUpdateEditedChanges()
        if include_optional:
            return WebhookProjectsV2StatusUpdateEditedChanges(
                body = github_openapi.models.webhook_member_edited_changes_permission.webhook_member_edited_changes_permission(
                    from = '', 
                    to = '', ),
                status = github_openapi.models.webhook_projects_v2_status_update_edited_changes_status.webhook_projects_v2_status_update_edited_changes_status(
                    from = 'INACTIVE', 
                    to = 'INACTIVE', ),
                start_date = github_openapi.models.webhook_projects_v2_status_update_edited_changes_start_date.webhook_projects_v2_status_update_edited_changes_start_date(
                    from = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                    to = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), ),
                target_date = github_openapi.models.webhook_projects_v2_status_update_edited_changes_start_date.webhook_projects_v2_status_update_edited_changes_start_date(
                    from = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                    to = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), )
            )
        else:
            return WebhookProjectsV2StatusUpdateEditedChanges(
        )
        """

    def testWebhookProjectsV2StatusUpdateEditedChanges(self):
        """Test WebhookProjectsV2StatusUpdateEditedChanges"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
