# coding: utf-8

"""
    GitHub v3 REST API

    GitHub's v3 REST API.

    The version of the OpenAPI document: 1.1.4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from github_openapi.models.checks_update_request import ChecksUpdateRequest

class TestChecksUpdateRequest(unittest.TestCase):
    """ChecksUpdateRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ChecksUpdateRequest:
        """Test ChecksUpdateRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ChecksUpdateRequest`
        """
        model = ChecksUpdateRequest()
        if include_optional:
            return ChecksUpdateRequest(
                name = '',
                details_url = '',
                external_id = '',
                started_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                status = 'queued',
                conclusion = 'action_required',
                completed_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                output = github_openapi.models.checks_update_request_output.checks_update_request_output(
                    title = '', 
                    summary = '', 
                    text = '', 
                    annotations = [
                        github_openapi.models.checks_create_request_output_annotations_inner.checks_create_request_output_annotations_inner(
                            path = '', 
                            start_line = 56, 
                            end_line = 56, 
                            start_column = 56, 
                            end_column = 56, 
                            annotation_level = 'notice', 
                            message = '', 
                            title = '', 
                            raw_details = '', )
                        ], 
                    images = [
                        github_openapi.models.checks_create_request_output_images_inner.checks_create_request_output_images_inner(
                            alt = '', 
                            image_url = '', 
                            caption = '', )
                        ], ),
                actions = [
                    github_openapi.models.checks_create_request_actions_inner.checks_create_request_actions_inner(
                        label = '', 
                        description = '', 
                        identifier = '', )
                    ]
            )
        else:
            return ChecksUpdateRequest(
        )
        """

    def testChecksUpdateRequest(self):
        """Test ChecksUpdateRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
