# coding: utf-8

"""
    GitHub v3 REST API

    GitHub's v3 REST API.

    The version of the OpenAPI document: 1.1.4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from github_openapi.models.repos_create_org_ruleset_request import ReposCreateOrgRulesetRequest

class TestReposCreateOrgRulesetRequest(unittest.TestCase):
    """ReposCreateOrgRulesetRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ReposCreateOrgRulesetRequest:
        """Test ReposCreateOrgRulesetRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ReposCreateOrgRulesetRequest`
        """
        model = ReposCreateOrgRulesetRequest()
        if include_optional:
            return ReposCreateOrgRulesetRequest(
                name = '',
                target = 'branch',
                enforcement = 'disabled',
                bypass_actors = [
                    github_openapi.models.repository_ruleset_bypass_actor.Repository Ruleset Bypass Actor(
                        actor_id = 56, 
                        actor_type = 'Integration', 
                        bypass_mode = 'always', )
                    ],
                conditions = github_openapi.models.organization_ruleset_conditions.Organization ruleset conditions(),
                rules = [
                    github_openapi.models.repository_rule.Repository Rule()
                    ]
            )
        else:
            return ReposCreateOrgRulesetRequest(
                name = '',
                enforcement = 'disabled',
        )
        """

    def testReposCreateOrgRulesetRequest(self):
        """Test ReposCreateOrgRulesetRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
