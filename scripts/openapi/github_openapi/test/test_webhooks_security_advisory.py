# coding: utf-8

"""
    GitHub v3 REST API

    GitHub's v3 REST API.

    The version of the OpenAPI document: 1.1.4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from github_openapi.models.webhooks_security_advisory import WebhooksSecurityAdvisory

class TestWebhooksSecurityAdvisory(unittest.TestCase):
    """WebhooksSecurityAdvisory unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> WebhooksSecurityAdvisory:
        """Test WebhooksSecurityAdvisory
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `WebhooksSecurityAdvisory`
        """
        model = WebhooksSecurityAdvisory()
        if include_optional:
            return WebhooksSecurityAdvisory(
                cvss = github_openapi.models.webhooks_security_advisory_cvss.webhooks_security_advisory_cvss(
                    score = 1.337, 
                    vector_string = '', ),
                cvss_severities = github_openapi.models.cvss_severities.cvss-severities(
                    cvss_v3 = github_openapi.models.cvss_severities_cvss_v3.cvss_severities_cvss_v3(
                        vector_string = '', 
                        score = 0, ), 
                    cvss_v4 = github_openapi.models.cvss_severities_cvss_v4.cvss_severities_cvss_v4(
                        vector_string = '', 
                        score = 0, ), ),
                cwes = [
                    github_openapi.models.webhooks_security_advisory_cwes_inner.webhooks_security_advisory_cwes_inner(
                        cwe_id = '', 
                        name = '', )
                    ],
                description = '',
                ghsa_id = '',
                identifiers = [
                    github_openapi.models.webhooks_security_advisory_identifiers_inner.webhooks_security_advisory_identifiers_inner(
                        type = '', 
                        value = '', )
                    ],
                published_at = '',
                references = [
                    github_openapi.models.webhooks_security_advisory_references_inner.webhooks_security_advisory_references_inner(
                        url = '', )
                    ],
                severity = '',
                summary = '',
                updated_at = '',
                vulnerabilities = [
                    github_openapi.models.webhooks_security_advisory_vulnerabilities_inner.webhooks_security_advisory_vulnerabilities_inner(
                        first_patched_version = github_openapi.models.webhooks_security_advisory_vulnerabilities_inner_first_patched_version.webhooks_security_advisory_vulnerabilities_inner_first_patched_version(
                            identifier = '', ), 
                        package = github_openapi.models.webhooks_security_advisory_vulnerabilities_inner_package.webhooks_security_advisory_vulnerabilities_inner_package(
                            ecosystem = '', 
                            name = '', ), 
                        severity = '', 
                        vulnerable_version_range = '', )
                    ],
                withdrawn_at = ''
            )
        else:
            return WebhooksSecurityAdvisory(
                cvss = github_openapi.models.webhooks_security_advisory_cvss.webhooks_security_advisory_cvss(
                    score = 1.337, 
                    vector_string = '', ),
                cwes = [
                    github_openapi.models.webhooks_security_advisory_cwes_inner.webhooks_security_advisory_cwes_inner(
                        cwe_id = '', 
                        name = '', )
                    ],
                description = '',
                ghsa_id = '',
                identifiers = [
                    github_openapi.models.webhooks_security_advisory_identifiers_inner.webhooks_security_advisory_identifiers_inner(
                        type = '', 
                        value = '', )
                    ],
                published_at = '',
                references = [
                    github_openapi.models.webhooks_security_advisory_references_inner.webhooks_security_advisory_references_inner(
                        url = '', )
                    ],
                severity = '',
                summary = '',
                updated_at = '',
                vulnerabilities = [
                    github_openapi.models.webhooks_security_advisory_vulnerabilities_inner.webhooks_security_advisory_vulnerabilities_inner(
                        first_patched_version = github_openapi.models.webhooks_security_advisory_vulnerabilities_inner_first_patched_version.webhooks_security_advisory_vulnerabilities_inner_first_patched_version(
                            identifier = '', ), 
                        package = github_openapi.models.webhooks_security_advisory_vulnerabilities_inner_package.webhooks_security_advisory_vulnerabilities_inner_package(
                            ecosystem = '', 
                            name = '', ), 
                        severity = '', 
                        vulnerable_version_range = '', )
                    ],
                withdrawn_at = '',
        )
        """

    def testWebhooksSecurityAdvisory(self):
        """Test WebhooksSecurityAdvisory"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
