# coding: utf-8

"""
    GitHub v3 REST API

    GitHub's v3 REST API.

    The version of the OpenAPI document: 1.1.4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from github_openapi.models.codespaces_repo_machines_for_authenticated_user200_response import CodespacesRepoMachinesForAuthenticatedUser200Response

class TestCodespacesRepoMachinesForAuthenticatedUser200Response(unittest.TestCase):
    """CodespacesRepoMachinesForAuthenticatedUser200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CodespacesRepoMachinesForAuthenticatedUser200Response:
        """Test CodespacesRepoMachinesForAuthenticatedUser200Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CodespacesRepoMachinesForAuthenticatedUser200Response`
        """
        model = CodespacesRepoMachinesForAuthenticatedUser200Response()
        if include_optional:
            return CodespacesRepoMachinesForAuthenticatedUser200Response(
                total_count = 56,
                machines = [
                    github_openapi.models.codespace_machine.Codespace machine(
                        name = 'standardLinux', 
                        display_name = '4 cores, 16 GB RAM, 64 GB storage', 
                        operating_system = 'linux', 
                        storage_in_bytes = 68719476736, 
                        memory_in_bytes = 17179869184, 
                        cpus = 4, 
                        prebuild_availability = 'ready', )
                    ]
            )
        else:
            return CodespacesRepoMachinesForAuthenticatedUser200Response(
                total_count = 56,
                machines = [
                    github_openapi.models.codespace_machine.Codespace machine(
                        name = 'standardLinux', 
                        display_name = '4 cores, 16 GB RAM, 64 GB storage', 
                        operating_system = 'linux', 
                        storage_in_bytes = 68719476736, 
                        memory_in_bytes = 17179869184, 
                        cpus = 4, 
                        prebuild_availability = 'ready', )
                    ],
        )
        """

    def testCodespacesRepoMachinesForAuthenticatedUser200Response(self):
        """Test CodespacesRepoMachinesForAuthenticatedUser200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
