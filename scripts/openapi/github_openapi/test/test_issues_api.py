# coding: utf-8

"""
    GitHub v3 REST API

    GitHub's v3 REST API.

    The version of the OpenAPI document: 1.1.4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from github_openapi.api.issues_api import IssuesApi


class TestIssuesApi(unittest.TestCase):
    """IssuesApi unit test stubs"""

    def setUp(self) -> None:
        self.api = IssuesApi()

    def tearDown(self) -> None:
        pass

    def test_issues_add_assignees(self) -> None:
        """Test case for issues_add_assignees

        Add assignees to an issue
        """
        pass

    def test_issues_add_labels(self) -> None:
        """Test case for issues_add_labels

        Add labels to an issue
        """
        pass

    def test_issues_add_sub_issue(self) -> None:
        """Test case for issues_add_sub_issue

        Add sub-issue
        """
        pass

    def test_issues_check_user_can_be_assigned(self) -> None:
        """Test case for issues_check_user_can_be_assigned

        Check if a user can be assigned
        """
        pass

    def test_issues_check_user_can_be_assigned_to_issue(self) -> None:
        """Test case for issues_check_user_can_be_assigned_to_issue

        Check if a user can be assigned to a issue
        """
        pass

    def test_issues_create(self) -> None:
        """Test case for issues_create

        Create an issue
        """
        pass

    def test_issues_create_comment(self) -> None:
        """Test case for issues_create_comment

        Create an issue comment
        """
        pass

    def test_issues_create_label(self) -> None:
        """Test case for issues_create_label

        Create a label
        """
        pass

    def test_issues_create_milestone(self) -> None:
        """Test case for issues_create_milestone

        Create a milestone
        """
        pass

    def test_issues_delete_comment(self) -> None:
        """Test case for issues_delete_comment

        Delete an issue comment
        """
        pass

    def test_issues_delete_label(self) -> None:
        """Test case for issues_delete_label

        Delete a label
        """
        pass

    def test_issues_delete_milestone(self) -> None:
        """Test case for issues_delete_milestone

        Delete a milestone
        """
        pass

    def test_issues_get(self) -> None:
        """Test case for issues_get

        Get an issue
        """
        pass

    def test_issues_get_comment(self) -> None:
        """Test case for issues_get_comment

        Get an issue comment
        """
        pass

    def test_issues_get_event(self) -> None:
        """Test case for issues_get_event

        Get an issue event
        """
        pass

    def test_issues_get_label(self) -> None:
        """Test case for issues_get_label

        Get a label
        """
        pass

    def test_issues_get_milestone(self) -> None:
        """Test case for issues_get_milestone

        Get a milestone
        """
        pass

    def test_issues_list(self) -> None:
        """Test case for issues_list

        List issues assigned to the authenticated user
        """
        pass

    def test_issues_list_assignees(self) -> None:
        """Test case for issues_list_assignees

        List assignees
        """
        pass

    def test_issues_list_comments(self) -> None:
        """Test case for issues_list_comments

        List issue comments
        """
        pass

    def test_issues_list_comments_for_repo(self) -> None:
        """Test case for issues_list_comments_for_repo

        List issue comments for a repository
        """
        pass

    def test_issues_list_events(self) -> None:
        """Test case for issues_list_events

        List issue events
        """
        pass

    def test_issues_list_events_for_repo(self) -> None:
        """Test case for issues_list_events_for_repo

        List issue events for a repository
        """
        pass

    def test_issues_list_events_for_timeline(self) -> None:
        """Test case for issues_list_events_for_timeline

        List timeline events for an issue
        """
        pass

    def test_issues_list_for_authenticated_user(self) -> None:
        """Test case for issues_list_for_authenticated_user

        List user account issues assigned to the authenticated user
        """
        pass

    def test_issues_list_for_org(self) -> None:
        """Test case for issues_list_for_org

        List organization issues assigned to the authenticated user
        """
        pass

    def test_issues_list_for_repo(self) -> None:
        """Test case for issues_list_for_repo

        List repository issues
        """
        pass

    def test_issues_list_labels_for_milestone(self) -> None:
        """Test case for issues_list_labels_for_milestone

        List labels for issues in a milestone
        """
        pass

    def test_issues_list_labels_for_repo(self) -> None:
        """Test case for issues_list_labels_for_repo

        List labels for a repository
        """
        pass

    def test_issues_list_labels_on_issue(self) -> None:
        """Test case for issues_list_labels_on_issue

        List labels for an issue
        """
        pass

    def test_issues_list_milestones(self) -> None:
        """Test case for issues_list_milestones

        List milestones
        """
        pass

    def test_issues_list_sub_issues(self) -> None:
        """Test case for issues_list_sub_issues

        List sub-issues
        """
        pass

    def test_issues_lock(self) -> None:
        """Test case for issues_lock

        Lock an issue
        """
        pass

    def test_issues_remove_all_labels(self) -> None:
        """Test case for issues_remove_all_labels

        Remove all labels from an issue
        """
        pass

    def test_issues_remove_assignees(self) -> None:
        """Test case for issues_remove_assignees

        Remove assignees from an issue
        """
        pass

    def test_issues_remove_label(self) -> None:
        """Test case for issues_remove_label

        Remove a label from an issue
        """
        pass

    def test_issues_remove_sub_issue(self) -> None:
        """Test case for issues_remove_sub_issue

        Remove sub-issue
        """
        pass

    def test_issues_reprioritize_sub_issue(self) -> None:
        """Test case for issues_reprioritize_sub_issue

        Reprioritize sub-issue
        """
        pass

    def test_issues_set_labels(self) -> None:
        """Test case for issues_set_labels

        Set labels for an issue
        """
        pass

    def test_issues_unlock(self) -> None:
        """Test case for issues_unlock

        Unlock an issue
        """
        pass

    def test_issues_update(self) -> None:
        """Test case for issues_update

        Update an issue
        """
        pass

    def test_issues_update_comment(self) -> None:
        """Test case for issues_update_comment

        Update an issue comment
        """
        pass

    def test_issues_update_label(self) -> None:
        """Test case for issues_update_label

        Update a label
        """
        pass

    def test_issues_update_milestone(self) -> None:
        """Test case for issues_update_milestone

        Update a milestone
        """
        pass


if __name__ == '__main__':
    unittest.main()
