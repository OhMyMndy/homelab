# coding: utf-8

"""
    GitHub v3 REST API

    GitHub's v3 REST API.

    The version of the OpenAPI document: 1.1.4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from github_openapi.models.copilot_usage_metrics import CopilotUsageMetrics

class TestCopilotUsageMetrics(unittest.TestCase):
    """CopilotUsageMetrics unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CopilotUsageMetrics:
        """Test CopilotUsageMetrics
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CopilotUsageMetrics`
        """
        model = CopilotUsageMetrics()
        if include_optional:
            return CopilotUsageMetrics(
                day = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                total_suggestions_count = 56,
                total_acceptances_count = 56,
                total_lines_suggested = 56,
                total_lines_accepted = 56,
                total_active_users = 56,
                total_chat_acceptances = 56,
                total_chat_turns = 56,
                total_active_chat_users = 56,
                breakdown = [
                    { }
                    ]
            )
        else:
            return CopilotUsageMetrics(
                day = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                breakdown = [
                    { }
                    ],
        )
        """

    def testCopilotUsageMetrics(self):
        """Test CopilotUsageMetrics"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
