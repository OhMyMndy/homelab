# coding: utf-8

"""
    GitHub v3 REST API

    GitHub's v3 REST API.

    The version of the OpenAPI document: 1.1.4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from github_openapi.models.repository_ruleset_conditions_repository_property_target import RepositoryRulesetConditionsRepositoryPropertyTarget

class TestRepositoryRulesetConditionsRepositoryPropertyTarget(unittest.TestCase):
    """RepositoryRulesetConditionsRepositoryPropertyTarget unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> RepositoryRulesetConditionsRepositoryPropertyTarget:
        """Test RepositoryRulesetConditionsRepositoryPropertyTarget
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `RepositoryRulesetConditionsRepositoryPropertyTarget`
        """
        model = RepositoryRulesetConditionsRepositoryPropertyTarget()
        if include_optional:
            return RepositoryRulesetConditionsRepositoryPropertyTarget(
                repository_property = github_openapi.models.repository_ruleset_conditions_repository_property_target_repository_property.repository_ruleset_conditions_repository_property_target_repository_property(
                    include = [
                        github_openapi.models.repository_ruleset_property_targeting_definition.Repository ruleset property targeting definition(
                            name = '', 
                            property_values = [
                                ''
                                ], 
                            source = 'custom', )
                        ], 
                    exclude = [
                        github_openapi.models.repository_ruleset_property_targeting_definition.Repository ruleset property targeting definition(
                            name = '', 
                            property_values = [
                                ''
                                ], 
                            source = 'custom', )
                        ], )
            )
        else:
            return RepositoryRulesetConditionsRepositoryPropertyTarget(
                repository_property = github_openapi.models.repository_ruleset_conditions_repository_property_target_repository_property.repository_ruleset_conditions_repository_property_target_repository_property(
                    include = [
                        github_openapi.models.repository_ruleset_property_targeting_definition.Repository ruleset property targeting definition(
                            name = '', 
                            property_values = [
                                ''
                                ], 
                            source = 'custom', )
                        ], 
                    exclude = [
                        github_openapi.models.repository_ruleset_property_targeting_definition.Repository ruleset property targeting definition(
                            name = '', 
                            property_values = [
                                ''
                                ], 
                            source = 'custom', )
                        ], ),
        )
        """

    def testRepositoryRulesetConditionsRepositoryPropertyTarget(self):
        """Test RepositoryRulesetConditionsRepositoryPropertyTarget"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
