# coding: utf-8

"""
    GitHub v3 REST API

    GitHub's v3 REST API.

    The version of the OpenAPI document: 1.1.4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from github_openapi.models.protected_branch import ProtectedBranch

class TestProtectedBranch(unittest.TestCase):
    """ProtectedBranch unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ProtectedBranch:
        """Test ProtectedBranch
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ProtectedBranch`
        """
        model = ProtectedBranch()
        if include_optional:
            return ProtectedBranch(
                url = '',
                required_status_checks = github_openapi.models.status_check_policy.Status Check Policy(
                    url = 'https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_status_checks', 
                    strict = True, 
                    contexts = ["continuous-integration/travis-ci"], 
                    checks = [
                        github_openapi.models.status_check_policy_checks_inner.status_check_policy_checks_inner(
                            context = 'continuous-integration/travis-ci', 
                            app_id = 56, )
                        ], 
                    contexts_url = 'https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_status_checks/contexts', ),
                required_pull_request_reviews = github_openapi.models.protected_branch_required_pull_request_reviews.protected_branch_required_pull_request_reviews(
                    url = '', 
                    dismiss_stale_reviews = True, 
                    require_code_owner_reviews = True, 
                    required_approving_review_count = 56, 
                    require_last_push_approval = True, 
                    dismissal_restrictions = github_openapi.models.protected_branch_required_pull_request_reviews_dismissal_restrictions.protected_branch_required_pull_request_reviews_dismissal_restrictions(
                        url = '', 
                        users_url = '', 
                        teams_url = '', 
                        users = [
                            github_openapi.models.simple_user.Simple User(
                                name = '', 
                                email = '', 
                                login = 'octocat', 
                                id = 1, 
                                node_id = 'MDQ6VXNlcjE=', 
                                avatar_url = 'https://github.com/images/error/octocat_happy.gif', 
                                gravatar_id = '41d064eb2195891e12d0413f63227ea7', 
                                url = 'https://api.github.com/users/octocat', 
                                html_url = 'https://github.com/octocat', 
                                followers_url = 'https://api.github.com/users/octocat/followers', 
                                following_url = 'https://api.github.com/users/octocat/following{/other_user}', 
                                gists_url = 'https://api.github.com/users/octocat/gists{/gist_id}', 
                                starred_url = 'https://api.github.com/users/octocat/starred{/owner}{/repo}', 
                                subscriptions_url = 'https://api.github.com/users/octocat/subscriptions', 
                                organizations_url = 'https://api.github.com/users/octocat/orgs', 
                                repos_url = 'https://api.github.com/users/octocat/repos', 
                                events_url = 'https://api.github.com/users/octocat/events{/privacy}', 
                                received_events_url = 'https://api.github.com/users/octocat/received_events', 
                                type = 'User', 
                                site_admin = True, 
                                starred_at = '"2020-07-09T00:17:55Z"', 
                                user_view_type = 'public', )
                            ], 
                        teams = [
                            github_openapi.models.team.Team(
                                id = 56, 
                                node_id = '', 
                                name = '', 
                                slug = '', 
                                description = '', 
                                privacy = '', 
                                notification_setting = '', 
                                permission = '', 
                                permissions = github_openapi.models.team_permissions.team_permissions(
                                    pull = True, 
                                    triage = True, 
                                    push = True, 
                                    maintain = True, 
                                    admin = True, ), 
                                url = '', 
                                html_url = 'https://github.com/orgs/rails/teams/core', 
                                members_url = '', 
                                repositories_url = '', 
                                parent = github_openapi.models.team_simple.Team Simple(
                                    id = 1, 
                                    node_id = 'MDQ6VGVhbTE=', 
                                    url = 'https://api.github.com/organizations/1/team/1', 
                                    members_url = 'https://api.github.com/organizations/1/team/1/members{/member}', 
                                    name = 'Justice League', 
                                    description = 'A great team.', 
                                    permission = 'admin', 
                                    privacy = 'closed', 
                                    notification_setting = 'notifications_enabled', 
                                    html_url = 'https://github.com/orgs/rails/teams/core', 
                                    repositories_url = 'https://api.github.com/organizations/1/team/1/repos', 
                                    slug = 'justice-league', 
                                    ldap_dn = 'uid=example,ou=users,dc=github,dc=com', ), )
                            ], 
                        apps = [
                            github_openapi.models.git_hub_app.GitHub app(
                                id = 37, 
                                slug = 'probot-owners', 
                                node_id = 'MDExOkludGVncmF0aW9uMQ==', 
                                client_id = '"Iv1.25b5d1e65ffc4022"', 
                                owner = github_openapi.models.simple_user.Simple User(
                                    name = '', 
                                    email = '', 
                                    login = 'octocat', 
                                    id = 1, 
                                    node_id = 'MDQ6VXNlcjE=', 
                                    avatar_url = 'https://github.com/images/error/octocat_happy.gif', 
                                    gravatar_id = '41d064eb2195891e12d0413f63227ea7', 
                                    url = 'https://api.github.com/users/octocat', 
                                    html_url = 'https://github.com/octocat', 
                                    followers_url = 'https://api.github.com/users/octocat/followers', 
                                    following_url = 'https://api.github.com/users/octocat/following{/other_user}', 
                                    gists_url = 'https://api.github.com/users/octocat/gists{/gist_id}', 
                                    starred_url = 'https://api.github.com/users/octocat/starred{/owner}{/repo}', 
                                    subscriptions_url = 'https://api.github.com/users/octocat/subscriptions', 
                                    organizations_url = 'https://api.github.com/users/octocat/orgs', 
                                    repos_url = 'https://api.github.com/users/octocat/repos', 
                                    events_url = 'https://api.github.com/users/octocat/events{/privacy}', 
                                    received_events_url = 'https://api.github.com/users/octocat/received_events', 
                                    type = 'User', 
                                    site_admin = True, 
                                    starred_at = '"2020-07-09T00:17:55Z"', 
                                    user_view_type = 'public', ), 
                                name = 'Probot Owners', 
                                description = 'The description of the app.', 
                                external_url = 'https://example.com', 
                                html_url = 'https://github.com/apps/super-ci', 
                                created_at = '2017-07-08T16:18:44-04:00', 
                                updated_at = '2017-07-08T16:18:44-04:00', 
                                permissions = {"issues":"read","deployments":"write"}, 
                                events = ["label","deployment"], 
                                installations_count = 5, 
                                client_secret = '"1d4b2097ac622ba702d19de498f005747a8b21d3"', 
                                webhook_secret = '"6fba8f2fc8a7e8f2cca5577eddd82ca7586b3b6b"', 
                                pem = '"-----BEGIN RSA PRIVATE KEY-----\nMIIEogIBAAKCAQEArYxrNYD/iT5CZVpRJu4rBKmmze3PVmT/gCo2ATUvDvZTPTey\nxcGJ3vvrJXazKk06pN05TN29o98jrYz4cengG3YGsXPNEpKsIrEl8NhbnxapEnM9\nJCMRe0P5JcPsfZlX6hmiT7136GRWiGOUba2X9+HKh8QJVLG5rM007TBER9/z9mWm\nrJuNh+m5l320oBQY/Qq3A7wzdEfZw8qm/mIN0FCeoXH1L6B8xXWaAYBwhTEh6SSn\nZHlO1Xu1JWDmAvBCi0RO5aRSKM8q9QEkvvHP4yweAtK3N8+aAbZ7ovaDhyGz8r6r\nzhU1b8Uo0Z2ysf503WqzQgIajr7Fry7/kUwpgQIDAQABAoIBADwJp80Ko1xHPZDy\nfcCKBDfIuPvkmSW6KumbsLMaQv1aGdHDwwTGv3t0ixSay8CGlxMRtRDyZPib6SvQ\n6OH/lpfpbMdW2ErkksgtoIKBVrDilfrcAvrNZu7NxRNbhCSvN8q0s4ICecjbbVQh\nnueSdlA6vGXbW58BHMq68uRbHkP+k+mM9U0mDJ1HMch67wlg5GbayVRt63H7R2+r\nVxcna7B80J/lCEjIYZznawgiTvp3MSanTglqAYi+m1EcSsP14bJIB9vgaxS79kTu\noiSo93leJbBvuGo8QEiUqTwMw4tDksmkLsoqNKQ1q9P7LZ9DGcujtPy4EZsamSJT\ny8OJt0ECgYEA2lxOxJsQk2kI325JgKFjo92mQeUObIvPfSNWUIZQDTjniOI6Gv63\nGLWVFrZcvQBWjMEQraJA9xjPbblV8PtfO87MiJGLWCHFxmPz2dzoedN+2Coxom8m\nV95CLz8QUShuao6u/RYcvUaZEoYs5bHcTmy5sBK80JyEmafJPtCQVxMCgYEAy3ar\nZr3yv4xRPEPMat4rseswmuMooSaK3SKub19WFI5IAtB/e7qR1Rj9JhOGcZz+OQrl\nT78O2OFYlgOIkJPvRMrPpK5V9lslc7tz1FSh3BZMRGq5jSyD7ETSOQ0c8T2O/s7v\nbeEPbVbDe4mwvM24XByH0GnWveVxaDl51ABD65sCgYB3ZAspUkOA5egVCh8kNpnd\nSd6SnuQBE3ySRlT2WEnCwP9Ph6oPgn+oAfiPX4xbRqkL8q/k0BdHQ4h+zNwhk7+h\nWtPYRAP1Xxnc/F+jGjb+DVaIaKGU18MWPg7f+FI6nampl3Q0KvfxwX0GdNhtio8T\nTj1E+SnFwh56SRQuxSh2gwKBgHKjlIO5NtNSflsUYFM+hyQiPiqnHzddfhSG+/3o\nm5nNaSmczJesUYreH5San7/YEy2UxAugvP7aSY2MxB+iGsiJ9WD2kZzTUlDZJ7RV\nUzWsoqBR+eZfVJ2FUWWvy8TpSG6trh4dFxImNtKejCR1TREpSiTV3Zb1dmahK9GV\nrK9NAoGAbBxRLoC01xfxCTgt5BDiBcFVh4fp5yYKwavJPLzHSpuDOrrI9jDn1oKN\nonq5sDU1i391zfQvdrbX4Ova48BN+B7p63FocP/MK5tyyBoT8zQEk2+vWDOw7H/Z\nu5dTCPxTIsoIwUw1I+7yIxqJzLPFgR2gVBwY1ra/8iAqCj+zeBw=\n-----END RSA PRIVATE KEY-----\n"', )
                            ], ), 
                    bypass_pull_request_allowances = github_openapi.models.protected_branch_required_pull_request_reviews_bypass_pull_request_allowances.protected_branch_required_pull_request_reviews_bypass_pull_request_allowances(
                        users = [
                            github_openapi.models.simple_user.Simple User(
                                name = '', 
                                email = '', 
                                login = 'octocat', 
                                id = 1, 
                                node_id = 'MDQ6VXNlcjE=', 
                                avatar_url = 'https://github.com/images/error/octocat_happy.gif', 
                                gravatar_id = '41d064eb2195891e12d0413f63227ea7', 
                                url = 'https://api.github.com/users/octocat', 
                                html_url = 'https://github.com/octocat', 
                                followers_url = 'https://api.github.com/users/octocat/followers', 
                                following_url = 'https://api.github.com/users/octocat/following{/other_user}', 
                                gists_url = 'https://api.github.com/users/octocat/gists{/gist_id}', 
                                starred_url = 'https://api.github.com/users/octocat/starred{/owner}{/repo}', 
                                subscriptions_url = 'https://api.github.com/users/octocat/subscriptions', 
                                organizations_url = 'https://api.github.com/users/octocat/orgs', 
                                repos_url = 'https://api.github.com/users/octocat/repos', 
                                events_url = 'https://api.github.com/users/octocat/events{/privacy}', 
                                received_events_url = 'https://api.github.com/users/octocat/received_events', 
                                type = 'User', 
                                site_admin = True, 
                                starred_at = '"2020-07-09T00:17:55Z"', 
                                user_view_type = 'public', )
                            ], 
                        teams = [
                            github_openapi.models.team.Team(
                                id = 56, 
                                node_id = '', 
                                name = '', 
                                slug = '', 
                                description = '', 
                                privacy = '', 
                                notification_setting = '', 
                                permission = '', 
                                url = '', 
                                html_url = 'https://github.com/orgs/rails/teams/core', 
                                members_url = '', 
                                repositories_url = '', 
                                parent = github_openapi.models.team_simple.Team Simple(
                                    id = 1, 
                                    node_id = 'MDQ6VGVhbTE=', 
                                    url = 'https://api.github.com/organizations/1/team/1', 
                                    members_url = 'https://api.github.com/organizations/1/team/1/members{/member}', 
                                    name = 'Justice League', 
                                    description = 'A great team.', 
                                    permission = 'admin', 
                                    privacy = 'closed', 
                                    notification_setting = 'notifications_enabled', 
                                    html_url = 'https://github.com/orgs/rails/teams/core', 
                                    repositories_url = 'https://api.github.com/organizations/1/team/1/repos', 
                                    slug = 'justice-league', 
                                    ldap_dn = 'uid=example,ou=users,dc=github,dc=com', ), )
                            ], ), ),
                required_signatures = github_openapi.models.branch_protection_required_signatures.branch_protection_required_signatures(
                    url = 'https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_signatures', 
                    enabled = True, ),
                enforce_admins = github_openapi.models.protected_branch_enforce_admins.protected_branch_enforce_admins(
                    url = '', 
                    enabled = True, ),
                required_linear_history = github_openapi.models.protected_branch_required_linear_history.protected_branch_required_linear_history(
                    enabled = True, ),
                allow_force_pushes = github_openapi.models.protected_branch_required_linear_history.protected_branch_required_linear_history(
                    enabled = True, ),
                allow_deletions = github_openapi.models.protected_branch_required_linear_history.protected_branch_required_linear_history(
                    enabled = True, ),
                restrictions = github_openapi.models.branch_restriction_policy.Branch Restriction Policy(
                    url = '', 
                    users_url = '', 
                    teams_url = '', 
                    apps_url = '', 
                    users = [
                        github_openapi.models.branch_restriction_policy_users_inner.branch_restriction_policy_users_inner(
                            login = '', 
                            id = 56, 
                            node_id = '', 
                            avatar_url = '', 
                            gravatar_id = '', 
                            url = '', 
                            html_url = '', 
                            followers_url = '', 
                            following_url = '', 
                            gists_url = '', 
                            starred_url = '', 
                            subscriptions_url = '', 
                            organizations_url = '', 
                            repos_url = '', 
                            events_url = '', 
                            received_events_url = '', 
                            type = '', 
                            site_admin = True, 
                            user_view_type = '', )
                        ], 
                    teams = [
                        github_openapi.models.branch_restriction_policy_teams_inner.branch_restriction_policy_teams_inner(
                            id = 56, 
                            node_id = '', 
                            url = '', 
                            html_url = '', 
                            name = '', 
                            slug = '', 
                            description = '', 
                            privacy = '', 
                            notification_setting = '', 
                            permission = '', 
                            members_url = '', 
                            repositories_url = '', 
                            parent = '', )
                        ], 
                    apps = [
                        github_openapi.models.branch_restriction_policy_apps_inner.branch_restriction_policy_apps_inner(
                            id = 56, 
                            slug = '', 
                            node_id = '', 
                            owner = github_openapi.models.branch_restriction_policy_apps_inner_owner.branch_restriction_policy_apps_inner_owner(
                                login = '', 
                                id = 56, 
                                node_id = '', 
                                url = '', 
                                repos_url = '', 
                                events_url = '', 
                                hooks_url = '', 
                                issues_url = '', 
                                members_url = '', 
                                public_members_url = '', 
                                avatar_url = '', 
                                description = '', 
                                gravatar_id = '""', 
                                html_url = '"https://github.com/testorg-ea8ec76d71c3af4b"', 
                                followers_url = '"https://api.github.com/users/testorg-ea8ec76d71c3af4b/followers"', 
                                following_url = '"https://api.github.com/users/testorg-ea8ec76d71c3af4b/following{/other_user}"', 
                                gists_url = '"https://api.github.com/users/testorg-ea8ec76d71c3af4b/gists{/gist_id}"', 
                                starred_url = '"https://api.github.com/users/testorg-ea8ec76d71c3af4b/starred{/owner}{/repo}"', 
                                subscriptions_url = '"https://api.github.com/users/testorg-ea8ec76d71c3af4b/subscriptions"', 
                                organizations_url = '"https://api.github.com/users/testorg-ea8ec76d71c3af4b/orgs"', 
                                received_events_url = '"https://api.github.com/users/testorg-ea8ec76d71c3af4b/received_events"', 
                                type = '"Organization"', 
                                site_admin = False, 
                                user_view_type = 'public', ), 
                            name = '', 
                            client_id = '', 
                            description = '', 
                            external_url = '', 
                            html_url = '', 
                            created_at = '', 
                            updated_at = '', 
                            permissions = github_openapi.models.branch_restriction_policy_apps_inner_permissions.branch_restriction_policy_apps_inner_permissions(
                                metadata = '', 
                                contents = '', 
                                issues = '', 
                                single_file = '', ), 
                            events = [
                                ''
                                ], )
                        ], ),
                required_conversation_resolution = github_openapi.models.protected_branch_required_conversation_resolution.protected_branch_required_conversation_resolution(
                    enabled = True, ),
                block_creations = github_openapi.models.protected_branch_required_linear_history.protected_branch_required_linear_history(
                    enabled = True, ),
                lock_branch = github_openapi.models.protected_branch_lock_branch.protected_branch_lock_branch(
                    enabled = True, ),
                allow_fork_syncing = github_openapi.models.protected_branch_allow_fork_syncing.protected_branch_allow_fork_syncing(
                    enabled = True, )
            )
        else:
            return ProtectedBranch(
                url = '',
        )
        """

    def testProtectedBranch(self):
        """Test ProtectedBranch"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
