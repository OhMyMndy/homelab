# coding: utf-8

"""
    GitHub v3 REST API

    GitHub's v3 REST API.

    The version of the OpenAPI document: 1.1.4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from github_openapi.models.actions_list_jobs_for_workflow_run_attempt200_response import ActionsListJobsForWorkflowRunAttempt200Response

class TestActionsListJobsForWorkflowRunAttempt200Response(unittest.TestCase):
    """ActionsListJobsForWorkflowRunAttempt200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ActionsListJobsForWorkflowRunAttempt200Response:
        """Test ActionsListJobsForWorkflowRunAttempt200Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ActionsListJobsForWorkflowRunAttempt200Response`
        """
        model = ActionsListJobsForWorkflowRunAttempt200Response()
        if include_optional:
            return ActionsListJobsForWorkflowRunAttempt200Response(
                total_count = 56,
                jobs = [
                    github_openapi.models.job.Job(
                        id = 21, 
                        run_id = 5, 
                        run_url = 'https://api.github.com/repos/github/hello-world/actions/runs/5', 
                        run_attempt = 1, 
                        node_id = 'MDg6Q2hlY2tSdW40', 
                        head_sha = '009b8a3a9ccbb128af87f9b1c0f4c62e8a304f6d', 
                        url = 'https://api.github.com/repos/github/hello-world/actions/jobs/21', 
                        html_url = 'https://github.com/github/hello-world/runs/4', 
                        status = 'queued', 
                        conclusion = 'success', 
                        created_at = '2019-08-08T08:00-07:00', 
                        started_at = '2019-08-08T08:00-07:00', 
                        completed_at = '2019-08-08T08:00-07:00', 
                        name = 'test-coverage', 
                        steps = [
                            github_openapi.models.job_steps_inner.job_steps_inner(
                                status = 'queued', 
                                conclusion = 'success', 
                                name = 'test-coverage', 
                                number = 1, 
                                started_at = '2019-08-08T08:00-07:00', 
                                completed_at = '2019-08-08T08:00-07:00', )
                            ], 
                        check_run_url = 'https://api.github.com/repos/github/hello-world/check-runs/4', 
                        labels = ["self-hosted","foo","bar"], 
                        runner_id = 1, 
                        runner_name = 'my runner', 
                        runner_group_id = 2, 
                        runner_group_name = 'my runner group', 
                        workflow_name = 'Build', 
                        head_branch = 'main', )
                    ]
            )
        else:
            return ActionsListJobsForWorkflowRunAttempt200Response(
                total_count = 56,
                jobs = [
                    github_openapi.models.job.Job(
                        id = 21, 
                        run_id = 5, 
                        run_url = 'https://api.github.com/repos/github/hello-world/actions/runs/5', 
                        run_attempt = 1, 
                        node_id = 'MDg6Q2hlY2tSdW40', 
                        head_sha = '009b8a3a9ccbb128af87f9b1c0f4c62e8a304f6d', 
                        url = 'https://api.github.com/repos/github/hello-world/actions/jobs/21', 
                        html_url = 'https://github.com/github/hello-world/runs/4', 
                        status = 'queued', 
                        conclusion = 'success', 
                        created_at = '2019-08-08T08:00-07:00', 
                        started_at = '2019-08-08T08:00-07:00', 
                        completed_at = '2019-08-08T08:00-07:00', 
                        name = 'test-coverage', 
                        steps = [
                            github_openapi.models.job_steps_inner.job_steps_inner(
                                status = 'queued', 
                                conclusion = 'success', 
                                name = 'test-coverage', 
                                number = 1, 
                                started_at = '2019-08-08T08:00-07:00', 
                                completed_at = '2019-08-08T08:00-07:00', )
                            ], 
                        check_run_url = 'https://api.github.com/repos/github/hello-world/check-runs/4', 
                        labels = ["self-hosted","foo","bar"], 
                        runner_id = 1, 
                        runner_name = 'my runner', 
                        runner_group_id = 2, 
                        runner_group_name = 'my runner group', 
                        workflow_name = 'Build', 
                        head_branch = 'main', )
                    ],
        )
        """

    def testActionsListJobsForWorkflowRunAttempt200Response(self):
        """Test ActionsListJobsForWorkflowRunAttempt200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
