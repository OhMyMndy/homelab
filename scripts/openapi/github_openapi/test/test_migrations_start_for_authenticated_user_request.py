# coding: utf-8

"""
    GitHub v3 REST API

    GitHub's v3 REST API.

    The version of the OpenAPI document: 1.1.4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from github_openapi.models.migrations_start_for_authenticated_user_request import MigrationsStartForAuthenticatedUserRequest

class TestMigrationsStartForAuthenticatedUserRequest(unittest.TestCase):
    """MigrationsStartForAuthenticatedUserRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> MigrationsStartForAuthenticatedUserRequest:
        """Test MigrationsStartForAuthenticatedUserRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `MigrationsStartForAuthenticatedUserRequest`
        """
        model = MigrationsStartForAuthenticatedUserRequest()
        if include_optional:
            return MigrationsStartForAuthenticatedUserRequest(
                lock_repositories = True,
                exclude_metadata = True,
                exclude_git_data = True,
                exclude_attachments = True,
                exclude_releases = True,
                exclude_owner_projects = True,
                org_metadata_only = True,
                exclude = ["repositories"],
                repositories = [
                    'acme/widgets'
                    ]
            )
        else:
            return MigrationsStartForAuthenticatedUserRequest(
                repositories = [
                    'acme/widgets'
                    ],
        )
        """

    def testMigrationsStartForAuthenticatedUserRequest(self):
        """Test MigrationsStartForAuthenticatedUserRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
