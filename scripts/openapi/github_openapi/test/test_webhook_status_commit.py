# coding: utf-8

"""
    GitHub v3 REST API

    GitHub's v3 REST API.

    The version of the OpenAPI document: 1.1.4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from github_openapi.models.webhook_status_commit import WebhookStatusCommit

class TestWebhookStatusCommit(unittest.TestCase):
    """WebhookStatusCommit unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> WebhookStatusCommit:
        """Test WebhookStatusCommit
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `WebhookStatusCommit`
        """
        model = WebhookStatusCommit()
        if include_optional:
            return WebhookStatusCommit(
                author = github_openapi.models.user.User(
                    avatar_url = '', 
                    deleted = True, 
                    email = '', 
                    events_url = '', 
                    followers_url = '', 
                    following_url = '', 
                    gists_url = '', 
                    gravatar_id = '', 
                    html_url = '', 
                    id = 56, 
                    login = '', 
                    name = '', 
                    node_id = '', 
                    organizations_url = '', 
                    received_events_url = '', 
                    repos_url = '', 
                    site_admin = True, 
                    starred_url = '', 
                    subscriptions_url = '', 
                    type = 'Bot', 
                    url = '', ),
                comments_url = '',
                commit = github_openapi.models.webhook_status_commit_commit.webhook_status_commit_commit(
                    author = null, 
                    comment_count = 56, 
                    committer = null, 
                    message = '', 
                    tree = github_openapi.models.short_branch_commit.short_branch_commit(
                        sha = '', 
                        url = '', ), 
                    url = '', 
                    verification = github_openapi.models.webhook_status_commit_commit_verification.webhook_status_commit_commit_verification(
                        payload = '', 
                        reason = 'expired_key', 
                        signature = '', 
                        verified = True, 
                        verified_at = '', ), ),
                committer = github_openapi.models.user.User(
                    avatar_url = '', 
                    deleted = True, 
                    email = '', 
                    events_url = '', 
                    followers_url = '', 
                    following_url = '', 
                    gists_url = '', 
                    gravatar_id = '', 
                    html_url = '', 
                    id = 56, 
                    login = '', 
                    name = '', 
                    node_id = '', 
                    organizations_url = '', 
                    received_events_url = '', 
                    repos_url = '', 
                    site_admin = True, 
                    starred_url = '', 
                    subscriptions_url = '', 
                    type = 'Bot', 
                    url = '', ),
                html_url = '',
                node_id = '',
                parents = [
                    github_openapi.models.webhook_status_commit_parents_inner.webhook_status_commit_parents_inner(
                        html_url = '', 
                        sha = '', 
                        url = '', )
                    ],
                sha = '',
                url = ''
            )
        else:
            return WebhookStatusCommit(
                author = github_openapi.models.user.User(
                    avatar_url = '', 
                    deleted = True, 
                    email = '', 
                    events_url = '', 
                    followers_url = '', 
                    following_url = '', 
                    gists_url = '', 
                    gravatar_id = '', 
                    html_url = '', 
                    id = 56, 
                    login = '', 
                    name = '', 
                    node_id = '', 
                    organizations_url = '', 
                    received_events_url = '', 
                    repos_url = '', 
                    site_admin = True, 
                    starred_url = '', 
                    subscriptions_url = '', 
                    type = 'Bot', 
                    url = '', ),
                comments_url = '',
                commit = github_openapi.models.webhook_status_commit_commit.webhook_status_commit_commit(
                    author = null, 
                    comment_count = 56, 
                    committer = null, 
                    message = '', 
                    tree = github_openapi.models.short_branch_commit.short_branch_commit(
                        sha = '', 
                        url = '', ), 
                    url = '', 
                    verification = github_openapi.models.webhook_status_commit_commit_verification.webhook_status_commit_commit_verification(
                        payload = '', 
                        reason = 'expired_key', 
                        signature = '', 
                        verified = True, 
                        verified_at = '', ), ),
                committer = github_openapi.models.user.User(
                    avatar_url = '', 
                    deleted = True, 
                    email = '', 
                    events_url = '', 
                    followers_url = '', 
                    following_url = '', 
                    gists_url = '', 
                    gravatar_id = '', 
                    html_url = '', 
                    id = 56, 
                    login = '', 
                    name = '', 
                    node_id = '', 
                    organizations_url = '', 
                    received_events_url = '', 
                    repos_url = '', 
                    site_admin = True, 
                    starred_url = '', 
                    subscriptions_url = '', 
                    type = 'Bot', 
                    url = '', ),
                html_url = '',
                node_id = '',
                parents = [
                    github_openapi.models.webhook_status_commit_parents_inner.webhook_status_commit_parents_inner(
                        html_url = '', 
                        sha = '', 
                        url = '', )
                    ],
                sha = '',
                url = '',
        )
        """

    def testWebhookStatusCommit(self):
        """Test WebhookStatusCommit"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
