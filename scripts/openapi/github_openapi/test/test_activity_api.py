# coding: utf-8

"""
    GitHub v3 REST API

    GitHub's v3 REST API.

    The version of the OpenAPI document: 1.1.4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from github_openapi.api.activity_api import ActivityApi


class TestActivityApi(unittest.TestCase):
    """ActivityApi unit test stubs"""

    def setUp(self) -> None:
        self.api = ActivityApi()

    def tearDown(self) -> None:
        pass

    def test_activity_check_repo_is_starred_by_authenticated_user(self) -> None:
        """Test case for activity_check_repo_is_starred_by_authenticated_user

        Check if a repository is starred by the authenticated user
        """
        pass

    def test_activity_delete_repo_subscription(self) -> None:
        """Test case for activity_delete_repo_subscription

        Delete a repository subscription
        """
        pass

    def test_activity_delete_thread_subscription(self) -> None:
        """Test case for activity_delete_thread_subscription

        Delete a thread subscription
        """
        pass

    def test_activity_get_feeds(self) -> None:
        """Test case for activity_get_feeds

        Get feeds
        """
        pass

    def test_activity_get_repo_subscription(self) -> None:
        """Test case for activity_get_repo_subscription

        Get a repository subscription
        """
        pass

    def test_activity_get_thread(self) -> None:
        """Test case for activity_get_thread

        Get a thread
        """
        pass

    def test_activity_get_thread_subscription_for_authenticated_user(self) -> None:
        """Test case for activity_get_thread_subscription_for_authenticated_user

        Get a thread subscription for the authenticated user
        """
        pass

    def test_activity_list_events_for_authenticated_user(self) -> None:
        """Test case for activity_list_events_for_authenticated_user

        List events for the authenticated user
        """
        pass

    def test_activity_list_notifications_for_authenticated_user(self) -> None:
        """Test case for activity_list_notifications_for_authenticated_user

        List notifications for the authenticated user
        """
        pass

    def test_activity_list_org_events_for_authenticated_user(self) -> None:
        """Test case for activity_list_org_events_for_authenticated_user

        List organization events for the authenticated user
        """
        pass

    def test_activity_list_public_events(self) -> None:
        """Test case for activity_list_public_events

        List public events
        """
        pass

    def test_activity_list_public_events_for_repo_network(self) -> None:
        """Test case for activity_list_public_events_for_repo_network

        List public events for a network of repositories
        """
        pass

    def test_activity_list_public_events_for_user(self) -> None:
        """Test case for activity_list_public_events_for_user

        List public events for a user
        """
        pass

    def test_activity_list_public_org_events(self) -> None:
        """Test case for activity_list_public_org_events

        List public organization events
        """
        pass

    def test_activity_list_received_events_for_user(self) -> None:
        """Test case for activity_list_received_events_for_user

        List events received by the authenticated user
        """
        pass

    def test_activity_list_received_public_events_for_user(self) -> None:
        """Test case for activity_list_received_public_events_for_user

        List public events received by a user
        """
        pass

    def test_activity_list_repo_events(self) -> None:
        """Test case for activity_list_repo_events

        List repository events
        """
        pass

    def test_activity_list_repo_notifications_for_authenticated_user(self) -> None:
        """Test case for activity_list_repo_notifications_for_authenticated_user

        List repository notifications for the authenticated user
        """
        pass

    def test_activity_list_repos_starred_by_authenticated_user(self) -> None:
        """Test case for activity_list_repos_starred_by_authenticated_user

        List repositories starred by the authenticated user
        """
        pass

    def test_activity_list_repos_starred_by_user(self) -> None:
        """Test case for activity_list_repos_starred_by_user

        List repositories starred by a user
        """
        pass

    def test_activity_list_repos_watched_by_user(self) -> None:
        """Test case for activity_list_repos_watched_by_user

        List repositories watched by a user
        """
        pass

    def test_activity_list_stargazers_for_repo(self) -> None:
        """Test case for activity_list_stargazers_for_repo

        List stargazers
        """
        pass

    def test_activity_list_watched_repos_for_authenticated_user(self) -> None:
        """Test case for activity_list_watched_repos_for_authenticated_user

        List repositories watched by the authenticated user
        """
        pass

    def test_activity_list_watchers_for_repo(self) -> None:
        """Test case for activity_list_watchers_for_repo

        List watchers
        """
        pass

    def test_activity_mark_notifications_as_read(self) -> None:
        """Test case for activity_mark_notifications_as_read

        Mark notifications as read
        """
        pass

    def test_activity_mark_repo_notifications_as_read(self) -> None:
        """Test case for activity_mark_repo_notifications_as_read

        Mark repository notifications as read
        """
        pass

    def test_activity_mark_thread_as_done(self) -> None:
        """Test case for activity_mark_thread_as_done

        Mark a thread as done
        """
        pass

    def test_activity_mark_thread_as_read(self) -> None:
        """Test case for activity_mark_thread_as_read

        Mark a thread as read
        """
        pass

    def test_activity_set_repo_subscription(self) -> None:
        """Test case for activity_set_repo_subscription

        Set a repository subscription
        """
        pass

    def test_activity_set_thread_subscription(self) -> None:
        """Test case for activity_set_thread_subscription

        Set a thread subscription
        """
        pass

    def test_activity_star_repo_for_authenticated_user(self) -> None:
        """Test case for activity_star_repo_for_authenticated_user

        Star a repository for the authenticated user
        """
        pass

    def test_activity_unstar_repo_for_authenticated_user(self) -> None:
        """Test case for activity_unstar_repo_for_authenticated_user

        Unstar a repository for the authenticated user
        """
        pass


if __name__ == '__main__':
    unittest.main()
