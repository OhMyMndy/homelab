# coding: utf-8

"""
    GitHub v3 REST API

    GitHub's v3 REST API.

    The version of the OpenAPI document: 1.1.4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from github_openapi.models.hook import Hook

class TestHook(unittest.TestCase):
    """Hook unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Hook:
        """Test Hook
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Hook`
        """
        model = Hook()
        if include_optional:
            return Hook(
                type = '',
                id = 42,
                name = 'web',
                active = True,
                events = ["push","pull_request"],
                config = github_openapi.models.webhook_configuration.Webhook Configuration(
                    url = 'https://example.com/webhook', 
                    content_type = '"json"', 
                    secret = '"********"', 
                    insecure_ssl = null, ),
                updated_at = '2011-09-06T20:39:23Z',
                created_at = '2011-09-06T17:26:27Z',
                url = 'https://api.github.com/repos/octocat/Hello-World/hooks/1',
                test_url = 'https://api.github.com/repos/octocat/Hello-World/hooks/1/test',
                ping_url = 'https://api.github.com/repos/octocat/Hello-World/hooks/1/pings',
                deliveries_url = 'https://api.github.com/repos/octocat/Hello-World/hooks/1/deliveries',
                last_response = github_openapi.models.hook_response.Hook Response(
                    code = 56, 
                    status = '', 
                    message = '', )
            )
        else:
            return Hook(
                type = '',
                id = 42,
                name = 'web',
                active = True,
                events = ["push","pull_request"],
                config = github_openapi.models.webhook_configuration.Webhook Configuration(
                    url = 'https://example.com/webhook', 
                    content_type = '"json"', 
                    secret = '"********"', 
                    insecure_ssl = null, ),
                updated_at = '2011-09-06T20:39:23Z',
                created_at = '2011-09-06T17:26:27Z',
                url = 'https://api.github.com/repos/octocat/Hello-World/hooks/1',
                test_url = 'https://api.github.com/repos/octocat/Hello-World/hooks/1/test',
                ping_url = 'https://api.github.com/repos/octocat/Hello-World/hooks/1/pings',
                last_response = github_openapi.models.hook_response.Hook Response(
                    code = 56, 
                    status = '', 
                    message = '', ),
        )
        """

    def testHook(self):
        """Test Hook"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
