# coding: utf-8

"""
    GitHub v3 REST API

    GitHub's v3 REST API.

    The version of the OpenAPI document: 1.1.4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from github_openapi.models.release import Release

class TestRelease(unittest.TestCase):
    """Release unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Release:
        """Test Release
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Release`
        """
        model = Release()
        if include_optional:
            return Release(
                assets = [
                    github_openapi.models.release_asset.Release Asset(
                        browser_download_url = '', 
                        content_type = '', 
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        download_count = 56, 
                        id = 56, 
                        label = '', 
                        name = '', 
                        node_id = '', 
                        size = 56, 
                        state = 'uploaded', 
                        updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        uploader = github_openapi.models.user.User(
                            avatar_url = '', 
                            deleted = True, 
                            email = '', 
                            events_url = '', 
                            followers_url = '', 
                            following_url = '', 
                            gists_url = '', 
                            gravatar_id = '', 
                            html_url = '', 
                            id = 56, 
                            login = '', 
                            name = '', 
                            node_id = '', 
                            organizations_url = '', 
                            received_events_url = '', 
                            repos_url = '', 
                            site_admin = True, 
                            starred_url = '', 
                            subscriptions_url = '', 
                            type = 'Bot', 
                            url = '', ), 
                        url = '', )
                    ],
                assets_url = '',
                author = github_openapi.models.user.User(
                    avatar_url = '', 
                    deleted = True, 
                    email = '', 
                    events_url = '', 
                    followers_url = '', 
                    following_url = '', 
                    gists_url = '', 
                    gravatar_id = '', 
                    html_url = '', 
                    id = 56, 
                    login = '', 
                    name = '', 
                    node_id = '', 
                    organizations_url = '', 
                    received_events_url = '', 
                    repos_url = '', 
                    site_admin = True, 
                    starred_url = '', 
                    subscriptions_url = '', 
                    type = 'Bot', 
                    url = '', 
                    user_view_type = '', ),
                body = '',
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                discussion_url = '',
                draft = True,
                html_url = '',
                id = 56,
                name = '',
                node_id = '',
                prerelease = True,
                published_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                reactions = github_openapi.models.reactions.Reactions(
                    +1 = 56, 
                    _1 = 56, 
                    confused = 56, 
                    eyes = 56, 
                    heart = 56, 
                    hooray = 56, 
                    laugh = 56, 
                    rocket = 56, 
                    total_count = 56, 
                    url = '', ),
                tag_name = '',
                tarball_url = '',
                target_commitish = '',
                upload_url = '',
                url = '',
                zipball_url = ''
            )
        else:
            return Release(
                assets = [
                    github_openapi.models.release_asset.Release Asset(
                        browser_download_url = '', 
                        content_type = '', 
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        download_count = 56, 
                        id = 56, 
                        label = '', 
                        name = '', 
                        node_id = '', 
                        size = 56, 
                        state = 'uploaded', 
                        updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        uploader = github_openapi.models.user.User(
                            avatar_url = '', 
                            deleted = True, 
                            email = '', 
                            events_url = '', 
                            followers_url = '', 
                            following_url = '', 
                            gists_url = '', 
                            gravatar_id = '', 
                            html_url = '', 
                            id = 56, 
                            login = '', 
                            name = '', 
                            node_id = '', 
                            organizations_url = '', 
                            received_events_url = '', 
                            repos_url = '', 
                            site_admin = True, 
                            starred_url = '', 
                            subscriptions_url = '', 
                            type = 'Bot', 
                            url = '', ), 
                        url = '', )
                    ],
                assets_url = '',
                author = github_openapi.models.user.User(
                    avatar_url = '', 
                    deleted = True, 
                    email = '', 
                    events_url = '', 
                    followers_url = '', 
                    following_url = '', 
                    gists_url = '', 
                    gravatar_id = '', 
                    html_url = '', 
                    id = 56, 
                    login = '', 
                    name = '', 
                    node_id = '', 
                    organizations_url = '', 
                    received_events_url = '', 
                    repos_url = '', 
                    site_admin = True, 
                    starred_url = '', 
                    subscriptions_url = '', 
                    type = 'Bot', 
                    url = '', 
                    user_view_type = '', ),
                body = '',
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                draft = True,
                html_url = '',
                id = 56,
                name = '',
                node_id = '',
                prerelease = True,
                published_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                tag_name = '',
                tarball_url = '',
                target_commitish = '',
                upload_url = '',
                url = '',
                zipball_url = '',
        )
        """

    def testRelease(self):
        """Test Release"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
