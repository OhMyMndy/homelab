# coding: utf-8

"""
    authentik

    Making authentication simple.

    The version of the OpenAPI document: 2024.6.4
    Contact: hello@goauthentik.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from authentik_openapi.models.paginated_authenticated_session_list import PaginatedAuthenticatedSessionList

class TestPaginatedAuthenticatedSessionList(unittest.TestCase):
    """PaginatedAuthenticatedSessionList unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PaginatedAuthenticatedSessionList:
        """Test PaginatedAuthenticatedSessionList
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PaginatedAuthenticatedSessionList`
        """
        model = PaginatedAuthenticatedSessionList()
        if include_optional:
            return PaginatedAuthenticatedSessionList(
                pagination = authentik_openapi.models.pagination.Pagination(
                    next = 1.337, 
                    previous = 1.337, 
                    count = 1.337, 
                    current = 1.337, 
                    total_pages = 1.337, 
                    start_index = 1.337, 
                    end_index = 1.337, ),
                results = [
                    authentik_openapi.models.authenticated_session.AuthenticatedSession(
                        uuid = '', 
                        current = True, 
                        user_agent = authentik_openapi.models.authenticated_session_user_agent.AuthenticatedSession_user_agent(
                            device = authentik_openapi.models.authenticated_session_user_agent_device.AuthenticatedSession_user_agent_device(
                                brand = '', 
                                family = '', 
                                model = '', ), 
                            os = authentik_openapi.models.authenticated_session_user_agent_os.AuthenticatedSession_user_agent_os(
                                family = '', 
                                major = '', 
                                minor = '', 
                                patch = '', 
                                patch_minor = '', ), 
                            user_agent = authentik_openapi.models.authenticated_session_user_agent_user_agent.AuthenticatedSession_user_agent_user_agent(
                                family = '', 
                                major = '', 
                                minor = '', 
                                patch = '', ), 
                            string = '', ), 
                        geo_ip = authentik_openapi.models.authenticated_session_geo_ip.AuthenticatedSession_geo_ip(
                            continent = '', 
                            country = '', 
                            lat = 1.337, 
                            long = 1.337, 
                            city = '', ), 
                        asn = authentik_openapi.models.authenticated_session_asn.AuthenticatedSession_asn(
                            asn = 56, 
                            as_org = '', 
                            network = '', ), 
                        user = 56, 
                        last_ip = '', 
                        last_user_agent = '', 
                        last_used = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        expires = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                    ]
            )
        else:
            return PaginatedAuthenticatedSessionList(
                pagination = authentik_openapi.models.pagination.Pagination(
                    next = 1.337, 
                    previous = 1.337, 
                    count = 1.337, 
                    current = 1.337, 
                    total_pages = 1.337, 
                    start_index = 1.337, 
                    end_index = 1.337, ),
                results = [
                    authentik_openapi.models.authenticated_session.AuthenticatedSession(
                        uuid = '', 
                        current = True, 
                        user_agent = authentik_openapi.models.authenticated_session_user_agent.AuthenticatedSession_user_agent(
                            device = authentik_openapi.models.authenticated_session_user_agent_device.AuthenticatedSession_user_agent_device(
                                brand = '', 
                                family = '', 
                                model = '', ), 
                            os = authentik_openapi.models.authenticated_session_user_agent_os.AuthenticatedSession_user_agent_os(
                                family = '', 
                                major = '', 
                                minor = '', 
                                patch = '', 
                                patch_minor = '', ), 
                            user_agent = authentik_openapi.models.authenticated_session_user_agent_user_agent.AuthenticatedSession_user_agent_user_agent(
                                family = '', 
                                major = '', 
                                minor = '', 
                                patch = '', ), 
                            string = '', ), 
                        geo_ip = authentik_openapi.models.authenticated_session_geo_ip.AuthenticatedSession_geo_ip(
                            continent = '', 
                            country = '', 
                            lat = 1.337, 
                            long = 1.337, 
                            city = '', ), 
                        asn = authentik_openapi.models.authenticated_session_asn.AuthenticatedSession_asn(
                            asn = 56, 
                            as_org = '', 
                            network = '', ), 
                        user = 56, 
                        last_ip = '', 
                        last_user_agent = '', 
                        last_used = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        expires = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                    ],
        )
        """

    def testPaginatedAuthenticatedSessionList(self):
        """Test PaginatedAuthenticatedSessionList"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
