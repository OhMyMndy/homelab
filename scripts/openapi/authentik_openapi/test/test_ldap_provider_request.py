# coding: utf-8

"""
    authentik

    Making authentication simple.

    The version of the OpenAPI document: 2024.6.4
    Contact: hello@goauthentik.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from authentik_openapi.models.ldap_provider_request import LDAPProviderRequest

class TestLDAPProviderRequest(unittest.TestCase):
    """LDAPProviderRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> LDAPProviderRequest:
        """Test LDAPProviderRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `LDAPProviderRequest`
        """
        model = LDAPProviderRequest()
        if include_optional:
            return LDAPProviderRequest(
                name = '0',
                authentication_flow = '',
                authorization_flow = '',
                property_mappings = [
                    ''
                    ],
                base_dn = '0',
                search_group = '',
                certificate = '',
                tls_server_name = '',
                uid_start_number = -2147483648,
                gid_start_number = -2147483648,
                search_mode = 'direct',
                bind_mode = 'direct',
                mfa_support = True
            )
        else:
            return LDAPProviderRequest(
                name = '0',
                authorization_flow = '',
        )
        """

    def testLDAPProviderRequest(self):
        """Test LDAPProviderRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
