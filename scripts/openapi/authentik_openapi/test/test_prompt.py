# coding: utf-8

"""
    authentik

    Making authentication simple.

    The version of the OpenAPI document: 2024.6.4
    Contact: hello@goauthentik.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from authentik_openapi.models.prompt import Prompt

class TestPrompt(unittest.TestCase):
    """Prompt unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Prompt:
        """Test Prompt
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Prompt`
        """
        model = Prompt()
        if include_optional:
            return Prompt(
                pk = '',
                name = '',
                field_key = '',
                label = '',
                type = 'text',
                required = True,
                placeholder = '',
                initial_value = '',
                order = -2147483648,
                promptstage_set = [
                    authentik_openapi.models.stage.Stage(
                        pk = '', 
                        name = '', 
                        component = '', 
                        verbose_name = '', 
                        verbose_name_plural = '', 
                        meta_model_name = '', 
                        flow_set = [
                            authentik_openapi.models.flow_set.FlowSet(
                                pk = '', 
                                policybindingmodel_ptr_id = '', 
                                name = '', 
                                slug = 'z', 
                                title = '', 
                                designation = null, 
                                background = '', 
                                policy_engine_mode = 'all', 
                                compatibility_mode = True, 
                                export_url = '', 
                                layout = 'stacked', 
                                denied_action = null, )
                            ], )
                    ],
                sub_text = '',
                placeholder_expression = True,
                initial_value_expression = True
            )
        else:
            return Prompt(
                pk = '',
                name = '',
                field_key = '',
                label = '',
                type = 'text',
        )
        """

    def testPrompt(self):
        """Test Prompt"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
