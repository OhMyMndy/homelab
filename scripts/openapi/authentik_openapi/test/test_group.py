# coding: utf-8

"""
    authentik

    Making authentication simple.

    The version of the OpenAPI document: 2024.6.4
    Contact: hello@goauthentik.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from authentik_openapi.models.group import Group

class TestGroup(unittest.TestCase):
    """Group unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Group:
        """Test Group
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Group`
        """
        model = Group()
        if include_optional:
            return Group(
                pk = '',
                num_pk = 56,
                name = '',
                is_superuser = True,
                parent = '',
                parent_name = '',
                users = [
                    56
                    ],
                users_obj = [
                    authentik_openapi.models.group_member.GroupMember(
                        pk = 56, 
                        username = 'A', 
                        name = '', 
                        is_active = True, 
                        last_login = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        email = '', 
                        attributes = {
                            'key' : null
                            }, 
                        uid = '', )
                    ],
                attributes = {
                    'key' : null
                    },
                roles = [
                    ''
                    ],
                roles_obj = [
                    authentik_openapi.models.role.Role(
                        pk = '', 
                        name = '', )
                    ]
            )
        else:
            return Group(
                pk = '',
                num_pk = 56,
                name = '',
                parent_name = '',
                users_obj = [
                    authentik_openapi.models.group_member.GroupMember(
                        pk = 56, 
                        username = 'A', 
                        name = '', 
                        is_active = True, 
                        last_login = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        email = '', 
                        attributes = {
                            'key' : null
                            }, 
                        uid = '', )
                    ],
                roles_obj = [
                    authentik_openapi.models.role.Role(
                        pk = '', 
                        name = '', )
                    ],
        )
        """

    def testGroup(self):
        """Test Group"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
