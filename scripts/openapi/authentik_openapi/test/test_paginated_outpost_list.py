# coding: utf-8

"""
    authentik

    Making authentication simple.

    The version of the OpenAPI document: 2024.6.4
    Contact: hello@goauthentik.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from authentik_openapi.models.paginated_outpost_list import PaginatedOutpostList

class TestPaginatedOutpostList(unittest.TestCase):
    """PaginatedOutpostList unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PaginatedOutpostList:
        """Test PaginatedOutpostList
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PaginatedOutpostList`
        """
        model = PaginatedOutpostList()
        if include_optional:
            return PaginatedOutpostList(
                pagination = authentik_openapi.models.pagination.Pagination(
                    next = 1.337, 
                    previous = 1.337, 
                    count = 1.337, 
                    current = 1.337, 
                    total_pages = 1.337, 
                    start_index = 1.337, 
                    end_index = 1.337, ),
                results = [
                    authentik_openapi.models.outpost.Outpost(
                        pk = '', 
                        name = '', 
                        type = 'proxy', 
                        providers = [
                            56
                            ], 
                        providers_obj = [
                            authentik_openapi.models.provider.Provider(
                                pk = 56, 
                                name = '', 
                                authentication_flow = '', 
                                authorization_flow = '', 
                                property_mappings = [
                                    ''
                                    ], 
                                component = '', 
                                assigned_application_slug = '', 
                                assigned_application_name = '', 
                                assigned_backchannel_application_slug = '', 
                                assigned_backchannel_application_name = '', 
                                verbose_name = '', 
                                verbose_name_plural = '', 
                                meta_model_name = '', )
                            ], 
                        service_connection = '', 
                        service_connection_obj = null, 
                        refresh_interval_s = 56, 
                        token_identifier = '', 
                        config = {
                            'key' : null
                            }, 
                        managed = '', )
                    ]
            )
        else:
            return PaginatedOutpostList(
                pagination = authentik_openapi.models.pagination.Pagination(
                    next = 1.337, 
                    previous = 1.337, 
                    count = 1.337, 
                    current = 1.337, 
                    total_pages = 1.337, 
                    start_index = 1.337, 
                    end_index = 1.337, ),
                results = [
                    authentik_openapi.models.outpost.Outpost(
                        pk = '', 
                        name = '', 
                        type = 'proxy', 
                        providers = [
                            56
                            ], 
                        providers_obj = [
                            authentik_openapi.models.provider.Provider(
                                pk = 56, 
                                name = '', 
                                authentication_flow = '', 
                                authorization_flow = '', 
                                property_mappings = [
                                    ''
                                    ], 
                                component = '', 
                                assigned_application_slug = '', 
                                assigned_application_name = '', 
                                assigned_backchannel_application_slug = '', 
                                assigned_backchannel_application_name = '', 
                                verbose_name = '', 
                                verbose_name_plural = '', 
                                meta_model_name = '', )
                            ], 
                        service_connection = '', 
                        service_connection_obj = null, 
                        refresh_interval_s = 56, 
                        token_identifier = '', 
                        config = {
                            'key' : null
                            }, 
                        managed = '', )
                    ],
        )
        """

    def testPaginatedOutpostList(self):
        """Test PaginatedOutpostList"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
