# coding: utf-8

"""
    authentik

    Making authentication simple.

    The version of the OpenAPI document: 2024.6.4
    Contact: hello@goauthentik.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from authentik_openapi.models.challenge_types import ChallengeTypes

class TestChallengeTypes(unittest.TestCase):
    """ChallengeTypes unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ChallengeTypes:
        """Test ChallengeTypes
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ChallengeTypes`
        """
        model = ChallengeTypes()
        if include_optional:
            return ChallengeTypes(
                type = 'native',
                flow_info = authentik_openapi.models.contextual_flow_info.ContextualFlowInfo(
                    title = '', 
                    background = '', 
                    cancel_url = '', 
                    layout = 'stacked', ),
                component = 'ak-stage-user-login',
                response_errors = {
                    'key' : [
                        authentik_openapi.models.error_detail.ErrorDetail(
                            string = '', 
                            code = '', )
                        ]
                    },
                pending_user = '',
                pending_user_avatar = '',
                error_message = '',
                client_id = '',
                scope = '',
                redirect_uri = '',
                state = '',
                activation_barcode = '',
                activation_code = '',
                stage_uuid = '',
                phone_number_required = True,
                codes = [
                    ''
                    ],
                config_url = '',
                device_challenges = [
                    authentik_openapi.models.device_challenge.DeviceChallenge(
                        device_class = '', 
                        device_uid = '', 
                        challenge = {
                            'key' : null
                            }, )
                    ],
                configuration_stages = [
                    authentik_openapi.models.selectable_stage.SelectableStage(
                        pk = '', 
                        name = '', 
                        verbose_name = '', 
                        meta_model_name = '', )
                    ],
                registration = {
                    'key' : None
                    },
                url = '',
                attrs = {
                    'key' : ''
                    },
                title = '',
                site_key = '',
                js_url = '',
                header_text = '',
                permissions = [
                    authentik_openapi.models.consent_permission.ConsentPermission(
                        name = '', 
                        id = '', )
                    ],
                additional_permissions = [
                    authentik_openapi.models.consent_permission.ConsentPermission(
                        name = '', 
                        id = '', )
                    ],
                token = '',
                request_id = '',
                error = '',
                traceback = '',
                user_fields = [
                    ''
                    ],
                password_fields = True,
                application_pre = '',
                flow_designation = 'authentication',
                enroll_url = '',
                recovery_url = '',
                passwordless_url = '',
                primary_action = '',
                sources = [
                    authentik_openapi.models.login_source.LoginSource(
                        name = '', 
                        icon_url = '', 
                        challenge = null, )
                    ],
                show_source_labels = True,
                slug = '',
                fields = [
                    authentik_openapi.models.stage_prompt.StagePrompt(
                        field_key = '', 
                        label = '', 
                        type = 'text', 
                        required = True, 
                        placeholder = '', 
                        initial_value = '', 
                        order = 56, 
                        sub_text = '', 
                        choices = [
                            ''
                            ], )
                    ],
                to = '',
                body = ''
            )
        else:
            return ChallengeTypes(
                type = 'native',
                pending_user = '',
                pending_user_avatar = '',
                client_id = '',
                scope = '',
                redirect_uri = '',
                state = '',
                activation_barcode = '',
                activation_code = '',
                stage_uuid = '',
                codes = [
                    ''
                    ],
                config_url = '',
                device_challenges = [
                    authentik_openapi.models.device_challenge.DeviceChallenge(
                        device_class = '', 
                        device_uid = '', 
                        challenge = {
                            'key' : null
                            }, )
                    ],
                configuration_stages = [
                    authentik_openapi.models.selectable_stage.SelectableStage(
                        pk = '', 
                        name = '', 
                        verbose_name = '', 
                        meta_model_name = '', )
                    ],
                registration = {
                    'key' : None
                    },
                url = '',
                attrs = {
                    'key' : ''
                    },
                site_key = '',
                js_url = '',
                permissions = [
                    authentik_openapi.models.consent_permission.ConsentPermission(
                        name = '', 
                        id = '', )
                    ],
                additional_permissions = [
                    authentik_openapi.models.consent_permission.ConsentPermission(
                        name = '', 
                        id = '', )
                    ],
                token = '',
                request_id = '',
                user_fields = [
                    ''
                    ],
                password_fields = True,
                flow_designation = 'authentication',
                primary_action = '',
                show_source_labels = True,
                slug = '',
                fields = [
                    authentik_openapi.models.stage_prompt.StagePrompt(
                        field_key = '', 
                        label = '', 
                        type = 'text', 
                        required = True, 
                        placeholder = '', 
                        initial_value = '', 
                        order = 56, 
                        sub_text = '', 
                        choices = [
                            ''
                            ], )
                    ],
                to = '',
                body = '',
        )
        """

    def testChallengeTypes(self):
        """Test ChallengeTypes"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
