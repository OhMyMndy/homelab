# coding: utf-8

"""
    authentik

    Making authentication simple.

    The version of the OpenAPI document: 2024.6.4
    Contact: hello@goauthentik.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from authentik_openapi.models.o_auth_source import OAuthSource

class TestOAuthSource(unittest.TestCase):
    """OAuthSource unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> OAuthSource:
        """Test OAuthSource
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `OAuthSource`
        """
        model = OAuthSource()
        if include_optional:
            return OAuthSource(
                pk = '',
                name = '',
                slug = 'z',
                enabled = True,
                authentication_flow = '',
                enrollment_flow = '',
                component = '',
                verbose_name = '',
                verbose_name_plural = '',
                meta_model_name = '',
                policy_engine_mode = 'all',
                user_matching_mode = 'identifier',
                managed = '',
                user_path_template = '',
                icon = '',
                provider_type = 'apple',
                request_token_url = '',
                authorization_url = '',
                access_token_url = '',
                profile_url = '',
                consumer_key = '',
                callback_url = '',
                additional_scopes = '',
                type = authentik_openapi.models.source_type.SourceType(
                    name = '', 
                    verbose_name = '', 
                    urls_customizable = True, 
                    request_token_url = '', 
                    authorization_url = '', 
                    access_token_url = '', 
                    profile_url = '', 
                    oidc_well_known_url = '', 
                    oidc_jwks_url = '', ),
                oidc_well_known_url = '',
                oidc_jwks_url = '',
                oidc_jwks = None
            )
        else:
            return OAuthSource(
                pk = '',
                name = '',
                slug = 'z',
                component = '',
                verbose_name = '',
                verbose_name_plural = '',
                meta_model_name = '',
                managed = '',
                icon = '',
                provider_type = 'apple',
                consumer_key = '',
                callback_url = '',
                type = authentik_openapi.models.source_type.SourceType(
                    name = '', 
                    verbose_name = '', 
                    urls_customizable = True, 
                    request_token_url = '', 
                    authorization_url = '', 
                    access_token_url = '', 
                    profile_url = '', 
                    oidc_well_known_url = '', 
                    oidc_jwks_url = '', ),
        )
        """

    def testOAuthSource(self):
        """Test OAuthSource"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
