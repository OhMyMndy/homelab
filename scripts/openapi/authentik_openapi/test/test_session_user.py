# coding: utf-8

"""
    authentik

    Making authentication simple.

    The version of the OpenAPI document: 2024.6.4
    Contact: hello@goauthentik.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from authentik_openapi.models.session_user import SessionUser

class TestSessionUser(unittest.TestCase):
    """SessionUser unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SessionUser:
        """Test SessionUser
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SessionUser`
        """
        model = SessionUser()
        if include_optional:
            return SessionUser(
                user = authentik_openapi.models.user_self.UserSelf(
                    pk = 56, 
                    username = 'A', 
                    name = '', 
                    is_active = True, 
                    is_superuser = True, 
                    groups = [
                        authentik_openapi.models.user_self_groups.UserSelfGroups(
                            name = '', 
                            pk = '', )
                        ], 
                    email = '', 
                    avatar = '', 
                    uid = '', 
                    settings = {
                        'key' : null
                        }, 
                    type = 'internal', 
                    system_permissions = [
                        ''
                        ], ),
                original = authentik_openapi.models.user_self.UserSelf(
                    pk = 56, 
                    username = 'A', 
                    name = '', 
                    is_active = True, 
                    is_superuser = True, 
                    groups = [
                        authentik_openapi.models.user_self_groups.UserSelfGroups(
                            name = '', 
                            pk = '', )
                        ], 
                    email = '', 
                    avatar = '', 
                    uid = '', 
                    settings = {
                        'key' : null
                        }, 
                    type = 'internal', 
                    system_permissions = [
                        ''
                        ], )
            )
        else:
            return SessionUser(
                user = authentik_openapi.models.user_self.UserSelf(
                    pk = 56, 
                    username = 'A', 
                    name = '', 
                    is_active = True, 
                    is_superuser = True, 
                    groups = [
                        authentik_openapi.models.user_self_groups.UserSelfGroups(
                            name = '', 
                            pk = '', )
                        ], 
                    email = '', 
                    avatar = '', 
                    uid = '', 
                    settings = {
                        'key' : null
                        }, 
                    type = 'internal', 
                    system_permissions = [
                        ''
                        ], ),
        )
        """

    def testSessionUser(self):
        """Test SessionUser"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
