# coding: utf-8

"""
    authentik

    Making authentication simple.

    The version of the OpenAPI document: 2024.6.4
    Contact: hello@goauthentik.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from authentik_openapi.models.paginated_user_list import PaginatedUserList

class TestPaginatedUserList(unittest.TestCase):
    """PaginatedUserList unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PaginatedUserList:
        """Test PaginatedUserList
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PaginatedUserList`
        """
        model = PaginatedUserList()
        if include_optional:
            return PaginatedUserList(
                pagination = authentik_openapi.models.pagination.Pagination(
                    next = 1.337, 
                    previous = 1.337, 
                    count = 1.337, 
                    current = 1.337, 
                    total_pages = 1.337, 
                    start_index = 1.337, 
                    end_index = 1.337, ),
                results = [
                    authentik_openapi.models.user.User(
                        pk = 56, 
                        username = '', 
                        name = '', 
                        is_active = True, 
                        last_login = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        is_superuser = True, 
                        groups = [
                            ''
                            ], 
                        groups_obj = [
                            authentik_openapi.models.user_group.UserGroup(
                                pk = '', 
                                num_pk = 56, 
                                name = '', 
                                is_superuser = True, 
                                parent = '', 
                                parent_name = '', 
                                attributes = {
                                    'key' : null
                                    }, )
                            ], 
                        email = '', 
                        avatar = '', 
                        attributes = {
                            'key' : null
                            }, 
                        uid = '', 
                        path = '', 
                        type = 'internal', 
                        uuid = '', )
                    ]
            )
        else:
            return PaginatedUserList(
                pagination = authentik_openapi.models.pagination.Pagination(
                    next = 1.337, 
                    previous = 1.337, 
                    count = 1.337, 
                    current = 1.337, 
                    total_pages = 1.337, 
                    start_index = 1.337, 
                    end_index = 1.337, ),
                results = [
                    authentik_openapi.models.user.User(
                        pk = 56, 
                        username = '', 
                        name = '', 
                        is_active = True, 
                        last_login = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        is_superuser = True, 
                        groups = [
                            ''
                            ], 
                        groups_obj = [
                            authentik_openapi.models.user_group.UserGroup(
                                pk = '', 
                                num_pk = 56, 
                                name = '', 
                                is_superuser = True, 
                                parent = '', 
                                parent_name = '', 
                                attributes = {
                                    'key' : null
                                    }, )
                            ], 
                        email = '', 
                        avatar = '', 
                        attributes = {
                            'key' : null
                            }, 
                        uid = '', 
                        path = '', 
                        type = 'internal', 
                        uuid = '', )
                    ],
        )
        """

    def testPaginatedUserList(self):
        """Test PaginatedUserList"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
