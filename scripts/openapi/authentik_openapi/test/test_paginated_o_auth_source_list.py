# coding: utf-8

"""
    authentik

    Making authentication simple.

    The version of the OpenAPI document: 2024.6.4
    Contact: hello@goauthentik.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from authentik_openapi.models.paginated_o_auth_source_list import PaginatedOAuthSourceList

class TestPaginatedOAuthSourceList(unittest.TestCase):
    """PaginatedOAuthSourceList unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PaginatedOAuthSourceList:
        """Test PaginatedOAuthSourceList
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PaginatedOAuthSourceList`
        """
        model = PaginatedOAuthSourceList()
        if include_optional:
            return PaginatedOAuthSourceList(
                pagination = authentik_openapi.models.pagination.Pagination(
                    next = 1.337, 
                    previous = 1.337, 
                    count = 1.337, 
                    current = 1.337, 
                    total_pages = 1.337, 
                    start_index = 1.337, 
                    end_index = 1.337, ),
                results = [
                    authentik_openapi.models.o_auth_source.OAuthSource(
                        pk = '', 
                        name = '', 
                        slug = 'z', 
                        enabled = True, 
                        authentication_flow = '', 
                        enrollment_flow = '', 
                        component = '', 
                        verbose_name = '', 
                        verbose_name_plural = '', 
                        meta_model_name = '', 
                        policy_engine_mode = 'all', 
                        user_matching_mode = null, 
                        managed = '', 
                        user_path_template = '', 
                        icon = '', 
                        provider_type = 'apple', 
                        request_token_url = '', 
                        authorization_url = '', 
                        access_token_url = '', 
                        profile_url = '', 
                        consumer_key = '', 
                        callback_url = '', 
                        additional_scopes = '', 
                        type = null, 
                        oidc_well_known_url = '', 
                        oidc_jwks_url = '', 
                        oidc_jwks = null, )
                    ]
            )
        else:
            return PaginatedOAuthSourceList(
                pagination = authentik_openapi.models.pagination.Pagination(
                    next = 1.337, 
                    previous = 1.337, 
                    count = 1.337, 
                    current = 1.337, 
                    total_pages = 1.337, 
                    start_index = 1.337, 
                    end_index = 1.337, ),
                results = [
                    authentik_openapi.models.o_auth_source.OAuthSource(
                        pk = '', 
                        name = '', 
                        slug = 'z', 
                        enabled = True, 
                        authentication_flow = '', 
                        enrollment_flow = '', 
                        component = '', 
                        verbose_name = '', 
                        verbose_name_plural = '', 
                        meta_model_name = '', 
                        policy_engine_mode = 'all', 
                        user_matching_mode = null, 
                        managed = '', 
                        user_path_template = '', 
                        icon = '', 
                        provider_type = 'apple', 
                        request_token_url = '', 
                        authorization_url = '', 
                        access_token_url = '', 
                        profile_url = '', 
                        consumer_key = '', 
                        callback_url = '', 
                        additional_scopes = '', 
                        type = null, 
                        oidc_well_known_url = '', 
                        oidc_jwks_url = '', 
                        oidc_jwks = null, )
                    ],
        )
        """

    def testPaginatedOAuthSourceList(self):
        """Test PaginatedOAuthSourceList"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
