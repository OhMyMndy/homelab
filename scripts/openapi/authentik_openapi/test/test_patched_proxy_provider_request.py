# coding: utf-8

"""
    authentik

    Making authentication simple.

    The version of the OpenAPI document: 2024.6.4
    Contact: hello@goauthentik.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from authentik_openapi.models.patched_proxy_provider_request import PatchedProxyProviderRequest

class TestPatchedProxyProviderRequest(unittest.TestCase):
    """PatchedProxyProviderRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PatchedProxyProviderRequest:
        """Test PatchedProxyProviderRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PatchedProxyProviderRequest`
        """
        model = PatchedProxyProviderRequest()
        if include_optional:
            return PatchedProxyProviderRequest(
                name = '0',
                authentication_flow = '',
                authorization_flow = '',
                property_mappings = [
                    ''
                    ],
                internal_host = '',
                external_host = '0',
                internal_host_ssl_validation = True,
                certificate = '',
                skip_path_regex = '',
                basic_auth_enabled = True,
                basic_auth_password_attribute = '',
                basic_auth_user_attribute = '',
                mode = 'proxy',
                intercept_header_auth = True,
                cookie_domain = '',
                jwks_sources = [
                    ''
                    ],
                access_token_validity = '0',
                refresh_token_validity = '0'
            )
        else:
            return PatchedProxyProviderRequest(
        )
        """

    def testPatchedProxyProviderRequest(self):
        """Test PatchedProxyProviderRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
