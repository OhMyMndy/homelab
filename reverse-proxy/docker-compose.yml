services:
  traefik:
    image: traefik:v2.10
    restart: unless-stopped
    init: true
    env_file: 
      - ./.env
      - ../.env-cloudflare
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./etc/traefik:/etc/traefik
    ports:
      - 80:80
      - 443:443
    labels:
      - "traefik.docker.network=default"
      - "traefik.http.routers.traefik.rule=Host(`traefik.home.ohmymndy.com`)"
      - "traefik.http.services.traefik.loadbalancer.server.port=8080"
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.middlewares=authentik@docker"
    extra_hosts: 
      - host.docker.internal:host-gateway
    networks:
      - default

  authentik-proxy:
    image: ghcr.io/goauthentik/proxy
    # ports:
    #     - 9000:9000
    #     - 9443:9443
    environment:
      AUTHENTIK_HOST: https://auth.home.ohmymndy.com
      AUTHENTIK_INSECURE: "false"
      AUTHENTIK_TOKEN: ${AUTHENTIK_TOKEN:?authentik token required}
      # Starting with 2021.9, you can optionally set this too
      # when authentik_host for internal communication doesn't match the public URL
      AUTHENTIK_HOST_BROWSER: https://auth.home.ohmymndy.com
    labels:
      traefik.enable: true
      traefik.port: 9000
      traefik.http.routers.authentik.rule: HostRegexp(`{subdomain:[a-z]+}.home.ohmymndy.com`) && PathPrefix(`/outpost.goauthentik.io/`)

      # `authentik-proxy` refers to the service name in the compose file.
      traefik.http.middlewares.authentik.forwardauth.address: http://authentik-proxy:9000/outpost.goauthentik.io/auth/traefik
      traefik.http.middlewares.authentik.forwardauth.trustForwardHeader: true
      traefik.http.middlewares.authentik.forwardauth.authResponseHeaders: X-authentik-username,X-authentik-groups,X-authentik-email,X-authentik-name,X-authentik-uid,X-authentik-jwt,X-authentik-meta-jwks,X-authentik-meta-outpost,X-authentik-meta-provider,X-authentik-meta-app,X-authentik-meta-version
    restart: unless-stopped

  whoami:
    image: containous/whoami
    labels:
        traefik.enable: true
        traefik.docker.network: default

        traefik.http.routers.whoami.rule: Host(`whoami.home.ohmymndy.com`)
        traefik.http.routers.whoami.middlewares: authentik@docker

    restart: unless-stopped

networks:
  default:
    name: reverse-proxy
  
