name: monitoring
services:
  grafana:
    image: grafana/grafana:11.4.0
    container_name: grafana
    volumes:
      - ./storage/grafana:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning:ro
      - ./grafana/ldap.toml:/etc/grafana/ldap.toml:ro
    environment:
      - GF_RENDERING_SERVER_URL=http://grafana-image-renderer:8081/render
      - GF_RENDERING_CALLBACK_URL=http://grafana:3000/
      - GF_AUTH_LDAP_ENABLED=true
      - GF_AUTH_LDAP_CONFIG_FILE=/etc/grafana/ldap.toml
      - GF_AUTH_LDAP_ALLOW_SIGN_UP=true
      - GF_LOG_FILTERS=ldap:debug
      - GF_LDAP_HOST=${GF_LDAP_HOST:?}
      - GF_LDAP_PORT=${GF_LDAP_PORT:?}
      - GF_LDAP_USER=${GF_LDAP_USER:?}
      - GF_LDAP_PASS=${GF_LDAP_PASS:?}
      - GF_INSTALL_PLUGINS=https://github.com/VictoriaMetrics/victoriametrics-datasource/releases/download/v0.10.3/victoriametrics-datasource-v0.10.3.zip;victoriametrics-datasource
      - GF_PLUGINS_ALLOW_LOADING_UNSIGNED_PLUGINS=victoriametrics-datasource
    restart: unless-stopped
    networks:
      - default
      - reverse-proxy
      - lldap
    labels:
      - "traefik.docker.network=reverse-proxy"
      - "traefik.http.routers.grafana.rule=Host(`grafana.home.ohmymndy.com`)"
      - "traefik.http.routers.grafana.tls=true"
      - "traefik.enable=true"
    healthcheck:
      test: ["CMD", "curl", "-f", "-s", "http://127.0.0.1:3000"]
      interval: 15s
      timeout: 2s
      retries: 3
      start_period: 40s
      start_interval: 5s

  grafana-image-renderer:
    image: grafana/grafana-image-renderer:3.11.6
    container_name: grafana-image-renderer
    restart: unless-stopped
    environment:
      ENABLE_METRICS: "true"

  # loki:
  #   image: grafana/loki:3.3.2
  #   restart: unless-stopped
  #
  #
  #
  vmagent:
    container_name: vmagent
    image: victoriametrics/vmagent:v1.108.1
    depends_on:
      - "victoriametrics"
    environment:
      - PVE_PROMETHEUS_PASSWORD=${PVE_PROMETHEUS_PASSWORD:?}
    volumes:
      - ./storage/vmagentdata:/vmagentdata
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    command:
      - "--promscrape.config=/etc/prometheus/prometheus.yml"
      - "--remoteWrite.url=http://victoriametrics:8428/api/v1/write"
    restart: unless-stopped
    extra_hosts:
      - host.docker.internal:host-gateway

  victoriametrics:
    image: victoriametrics/victoria-metrics:v1.108.1
    container_name: victoriametrics
    restart: unless-stopped
    volumes:
      - ./storage/victoriametrics:/storage
    command:
      - "--storageDataPath=/storage"
    # depends_on:
    #   - cadvisor
    networks:
      - default
      - reverse-proxy
    # labels:
    #   - "traefik.docker.network=reverse-proxy"
    #   - "traefik.http.routers.prometheus.rule=Host(`prometheus.home.ohmymndy.com`)"
    #   - "traefik.http.routers.prometheus.tls=true"
    #   - "traefik.enable=true"
  #
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.49.2
    container_name: cadvisor
    privileged: true
    command:
      - --docker_only=true
      - --store_container_labels=false
      - --enable_metrics=cpu,diskIO,memory,network # advtcp,app,cpu,cpuLoad,cpu_topology,cpuset,disk,diskIO,hugetlb,memory,memory_numa,network,oom_event,percpu,perf_event,process,referenced_memory,resctrl,sched,tcp,udp
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /dev/disk:/dev/disk:ro
      - /var/lib/docker/:/var/lib/docker:ro
    devices:
      - /dev/kmsg
    restart: unless-stopped
    networks:
      - default
      - reverse-proxy
    labels:
      - "traefik.docker.network=reverse-proxy"
      - "traefik.http.routers.cadvisor.rule=Host(`cadvisor.home.ohmymndy.com`)"
      - "traefik.http.routers.cadvisor.tls=true"
      - "traefik.enable=true"
    healthcheck:
      test:
        ["CMD", "wget", "-q", "--spider", "http://127.0.0.1:8080/containers"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 40s
      start_interval: 5s

  node-exporter:
    image: prom/node-exporter:v1.8.2
    container_name: node-exporter
    command:
      - "--path.rootfs=/host"
    network_mode: host
    pid: host
    restart: unless-stopped
    volumes:
      - "/:/host:ro,rslave"
    # volumes:
    #   - /proc:/host/proc:ro
    #   - /sys:/host/sys:ro
    #   - /:/rootfs:ro
    # command:
    #   - "--path.procfs=/host/proc"
    #   - "--path.rootfs=/rootfs"
    #   - "--path.sysfs=/host/sys"
    #   - "--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)"
    # restart: unless-stopped

networks:
  default:
  reverse-proxy:
    external: true
    name: reverse-proxy
  lldap:
    name: lldap_default
    external: true
